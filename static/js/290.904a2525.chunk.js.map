{"version":3,"file":"static/js/290.904a2525.chunk.js","mappings":"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","sources":["components/Map/MapContext/index.js","components/Map/Hook/useMap.js","components/Map/MapComponent/index.js","components/Map/LayerManage/index.js","components/Map/MapTooltip/index.js","components/Map/index.js","components/Map/globalSetting.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst MapContext = React.createContext(null);\r\nexport default MapContext;","import { useContext } from 'react';\r\nimport MapContext from '../MapContext';\r\n\r\nexport const useMap = () => {\r\n    return useContext(MapContext);\r\n};\r\n\r\nexport default useMap;","import * as React from 'react';\r\nimport {useLayoutEffect} from \"react\";\r\nimport {useMap} from \"../Hook/useMap\";\r\n\r\nconst MapComponent = ({mapDivId='map', children, role = 'application', ...passThroughProps})=>{\r\n    const map = useMap();\r\n    useLayoutEffect(()=>{\r\n        map.setTarget(mapDivId);\r\n        return ()=>{\r\n            map.setTarget(undefined);\r\n        }\r\n    },[])\r\n    return (map&&<div\r\n        className=\"map\"\r\n        role={role}\r\n        id={mapDivId}\r\n        {...passThroughProps}\r\n    >\r\n        {children}\r\n    </div>)\r\n}\r\n\r\nexport default MapComponent;","import * as React from 'react';\r\nimport {useMap} from \"../Hook/useMap\";\r\nimport {useLayoutEffect} from \"react\";\r\nimport * as OlStyle from 'ol/style';\r\nimport OlSourceVector from 'ol/source/Vector';\r\nimport OlFormatGeo from 'ol/format/GeoJSON';\r\nimport OlVector from 'ol/layer/Vector';\r\nimport OlFeature from \"ol/Feature\";\r\nimport OlLineString from \"ol/geom/LineString\";\r\nimport OlPoint from \"ol/geom/Point\";\r\nimport {transform as OlTransform, fromLonLat as OlFromLonLat} from \"ol/proj\";\r\n\r\n\r\nfunction latlong2ol(arr){\r\n    return arr.map(d=>OlTransform([parseFloat(d.lng), parseFloat(d.lat)], 'EPSG:4326', 'EPSG:3857'))\r\n}\r\n\r\nfunction json2style(styleObject){\r\n    let temp_style = {};\r\n    Object.keys(styleObject).forEach(k=>{\r\n        const key_arrr=  k.split('-');\r\n        if (!temp_style[key_arrr[0]])\r\n            temp_style[key_arrr[0]] = {};\r\n        temp_style[key_arrr[0]][key_arrr[1]]=styleObject[k];\r\n\r\n    });\r\n    let temp_op ={};\r\n    Object.keys(temp_style).forEach(k=>{\r\n        temp_op[k] = new OlStyle[jsUcfirst(k)](temp_style[k]);\r\n    });\r\n    return new OlStyle.Style(temp_op);\r\n}\r\nfunction jsUcfirst(string)\r\n{\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\nconst LayerManage = ({name,data,onPlot,enable})=>{\r\n    const map = useMap();\r\n    useLayoutEffect(()=>{\r\n        map[name]=map[name]??[];\r\n        map[name].remove = ()=>{\r\n            map[name].length = 0;\r\n            if (map[name].layer) {\r\n                map.removeLayer(map[name].layer);\r\n                map[name].layer = undefined\r\n            }\r\n        };\r\n        map[name].styles = {\r\n            'Polygon':new OlStyle.Style({\r\n                stroke: new OlStyle.Stroke({\r\n                    color: 'black',\r\n                    width: 1\r\n                })})};\r\n        map[name].styleFunction = function(feature) {\r\n            return this.styles[feature.getGeometry().getType()];\r\n        };\r\n        map[name].setStyle = function(newstyle,single){\r\n            if (single){\r\n                this.styles = json2style(newstyle);\r\n                this.styleFunction = this.styles;\r\n            }else{\r\n                for (let i in newstyle)\r\n                    this.styles[i] = json2style(newstyle[i]);\r\n                this.styleFunction = function(feature) {\r\n                    return this.styles[feature.getGeometry().getType()];\r\n                }\r\n            }\r\n        }\r\n        map[name].addGeoJson = function (geoJsonObject){\r\n            let vectorSource = new OlSourceVector({\r\n                features: new OlFormatGeo().readFeatures(geoJsonObject,{featureProjection: 'EPSG:3857'})\r\n            });\r\n            let  vectorLayer = new OlVector({\r\n                source: vectorSource,\r\n                style: this.styleFunction\r\n            });\r\n            this.layer = vectorLayer;\r\n            map.addLayer(this.layer);\r\n        };\r\n\r\n        map[name].addLineGeoData = function (data){\r\n            let features = data.map((d) => {\r\n                return new OlFeature({\r\n                        geometry: new OlLineString(latlong2ol([d.start, d.end])),\r\n                        data: d\r\n                    }\r\n                );\r\n            });\r\n            let vectorSource = new OlSourceVector({features});\r\n            let  vectorLayer = new OlVector({\r\n                source: vectorSource,\r\n                style: this.styleFunction\r\n            });\r\n            this.layer = vectorLayer;\r\n            map.addLayer(this.layer);\r\n        };\r\n\r\n        map[name].addIconGeoData = function (data,icon){\r\n            let features = data.map((d) => {\r\n                const newf = new OlFeature({\r\n                        geometry: new OlPoint(OlFromLonLat([parseFloat(d.lng), parseFloat(d.lat)])),\r\n                        data: d\r\n                    }\r\n                );\r\n                // console.log([parseFloat(d.lng), parseFloat(d.lat)],OlFromLonLat([parseFloat(d.lng), parseFloat(d.lat)]))\r\n                newf.setStyle(new OlStyle.Style({\r\n                    image: new OlStyle.Icon(/** @type {module:ol/style/Icon~Options} */ ({\r\n                        color: '#a8250c',\r\n                        crossOrigin: 'anonymous',\r\n                        src: icon,\r\n                        anchor: [0.5, 1],\r\n                        anchorXUnits: 'fraction',\r\n                        anchorYUnits: 'fraction',\r\n                        scale: 0.5\r\n                    }))\r\n                }));\r\n                return newf;\r\n            });\r\n            let vectorSource = new OlSourceVector({features});\r\n            let  vectorLayer = new OlVector({\r\n                source: vectorSource\r\n            });\r\n            this.layer = vectorLayer;\r\n            map.addLayer(this.layer);\r\n        };\r\n        map[name].addtomap = function (){\r\n            map.addLayer(this.layer);\r\n        };\r\n    },[])\r\n    useLayoutEffect(()=>{\r\n        console.log(`I plot ${name}`,data)\r\n        if (map[name] && onPlot) {\r\n            onPlot({map, name, enable, data})\r\n        }\r\n    },[data])\r\n    return (<></>)\r\n}\r\n\r\nexport default LayerManage;\r\n","import useMap from \"../Hook/useMap\";\r\nimport Overlay from 'ol/Overlay';\r\nimport {useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {Box, Stack, Typography} from \"@mui/material\";\r\nimport {Snap} from \"ol/interaction\";\r\n\r\nconst Tooltip = ({onClick})=> {\r\n    const tooltipRef = useRef();\r\n    const map = useMap();\r\n    const [current,setCurrent] = useState();\r\n    useLayoutEffect(()=>{\r\n        if (tooltipRef.current) {\r\n            if (map.tooltip)\r\n                map.removeLayer(map.tooltip);\r\n            map.tooltip = new Overlay({\r\n                element: tooltipRef.current,\r\n                offset: [10, 0],\r\n                positioning: 'bottom-left'\r\n            });\r\n            map.tooltip.holdTip = false;\r\n            map.addOverlay(map.tooltip);\r\n            map.on('pointermove', showInfo);\r\n            function showInfo(event) {\r\n                    let features = map.getFeaturesAtPixel(event.pixel);\r\n                    let coordinate = event.coordinate;\r\n                    if (features && features[0] && features[0].getProperties().data&&features[0].getProperties().data.Section) {\r\n                        map.tooltip.setPosition(coordinate);\r\n                        let properties = features[0].getProperties();\r\n                        setCurrent(properties);\r\n                    }else{\r\n                        setCurrent(null);\r\n                    }\r\n            }\r\n        }\r\n    },[tooltipRef.current]);\r\n    useEffect(()=>{\r\n        if (onClick) {\r\n            map.on('singleclick', showDetail);\r\n            function showDetail(event) {\r\n                if (onClick) {\r\n                    let features = map.getFeaturesAtPixel(event.pixel);\r\n                    if (!features || !features[0].getProperties().data || !features[0].getProperties().data.Section) {\r\n                        return;\r\n                    }\r\n                    let properties = features[0].getProperties();\r\n                    onClick(properties.data.Section)\r\n                }\r\n            }\r\n        }else{\r\n            map.on('singleclick', null);\r\n        }\r\n    },[map,onClick])\r\n    return <div ref={tooltipRef} style={{position:\"absolute\",zIndex: 10, display:current?'block':'none'}}>\r\n        <Box sx={{ border: 1, p: 1, bgcolor: 'background.paper', minWidth:100 }}>\r\n            {current&&<Typography>{current.data.Section}</Typography>}\r\n        </Box>\r\n    </div>\r\n}\r\n\r\nexport default Tooltip","import * as React from 'react';\r\nimport MapContext from './MapContext'\r\nimport MapComponent from \"./MapComponent\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport LayerManage from \"./LayerManage\";\r\nimport {feature} from \"topojson-client\";\r\nimport us from \"./geodata/TX-48-texas-counties.json\";\r\nimport us_dis from \"./geodata/TxDOT_Districts.json\";\r\nimport marker from \"./pin.png\";\r\nimport {olMap,fitBounds,longAccessor,latAccessor} from \"./globalSetting\";\r\nimport './ol.css';\r\nimport {useCallback, useEffect, useMemo} from \"react\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOsm from \"ol/source/OSM\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlScaleLine from \"ol/control/ScaleLine\";\r\nimport MapTooltip from \"./MapTooltip\";\r\n\r\n\r\nfunction plotCounties({map,name,enable,data}) {\r\n    map[name].remove();\r\n    if (enable) {\r\n        let ctPath = {\r\n            type: \"GeometryCollection\"\r\n        };\r\n        ctPath.geometries = us.objects.cb_2015_texas_county_20m.geometries.filter(d => data.indexOf(d.properties.NAME.toLowerCase()) >= 0);\r\n        if (ctPath.geometries.length) {\r\n            const geoJsonObject = feature(us, ctPath)\r\n            map[name].setStyle({\r\n                'fill-color': [1, 1, 1, 0.1],\r\n                'stroke-width': 1,\r\n                'stroke-color': [1, 1, 1, 1],\r\n            }, true);\r\n            map[name].addGeoJson(geoJsonObject);\r\n        }\r\n    }\r\n}\r\n\r\nfunction plotDistrict({map,name,enable,data}) {\r\n    //Clear the previous county\r\n    map[name].remove();\r\n\r\n    if (enable) {\r\n        let ctPath = {\r\n            type: \"FeatureCollection\"\r\n        };\r\n        ctPath.features = us_dis.features.filter(d => data.find(e=>e.toLowerCase() ===d.properties.DIST_NM.toLowerCase()));\r\n        if (ctPath.features.length) {\r\n            map[name].setStyle({\r\n                'fill-color': [1, 1, 1, 0.05],\r\n                'stroke-width': 1,\r\n                'stroke-color': [1, 1, 1, 1],\r\n                'stroke-lineDash': [4,4],\r\n            }, true);\r\n            map[name].addGeoJson(ctPath);\r\n            const arr = []\r\n            ctPath.features.forEach(d => d.geometry.coordinates.forEach(c => arr.push(c)));\r\n            fitBounds(map,name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction plotRoad({map,name,enable,data}) {\r\n    map[name].remove();\r\n    if (enable) {\r\n        let features = data.filter(d => (d[\"_GPSStart\"]) && (d[\"_GPSEnd\"])).map(d=>(\r\n            {start:d[\"_GPSStart\"],end:d[\"_GPSEnd\"], Section:d.Section}\r\n        ));\r\n        if (features.length) {\r\n            map[name].setStyle({\r\n                'stroke-color': [255, 0, 0, 0.8],\r\n                'stroke-width': 3,\r\n            }, true);\r\n\r\n            map[name].addLineGeoData(features);\r\n        }\r\n    }\r\n}\r\nfunction plotGPS({map,name,enable,data}) {\r\n    map[name].remove();\r\n\r\n    if (enable) {\r\n        let features = data.filter(d => (d[\"_GPSStart\"]) || (d[\"_GPSEnd\"])).map(d=>(\r\n            {...(d[\"_GPSStart\"]||d[\"_GPSEnd\"]), Section:d.Section}\r\n        ));\r\n        if (features.length) {\r\n            map[name].addIconGeoData(features, marker)\r\n        }\r\n    }\r\n}\r\nconst Map = ({allCounties,plotCountyOption,allDistrics,plotDistrictOption,roadData,onClick})=>{\r\n    const olMap = useMemo(()=>{\r\n        const layer = new OlLayerTile({\r\n            preload: 4,\r\n            source: new OlSourceOsm()\r\n        });\r\n        const olMap = new OlMap({\r\n            target: null,\r\n            view: new OlView({\r\n                center: [0, 0],\r\n                // projection: 'EPSG:4326',\r\n                zoom: 1\r\n            }),\r\n            layers: [layer]\r\n        });\r\n        olMap.addControl(new OlScaleLine({units: 'us'}));\r\n        return olMap;\r\n    },[]);\r\n\r\n    return <MapContext.Provider value={olMap}>\r\n            <LayerManage name={'county'} data={allCounties} onPlot={plotCounties} enable={plotCountyOption}></LayerManage>\r\n            <LayerManage name={'district'} data={allDistrics} onPlot={plotDistrict} enable={plotDistrictOption}></LayerManage>\r\n            <LayerManage name={'road'} data={roadData} onPlot={plotRoad} enable={true}></LayerManage>\r\n            <LayerManage name={'pin'} data={roadData} onPlot={plotGPS} enable={true}></LayerManage>\r\n            <MapTooltip onClick={onClick}/>\r\n            <AutoSizer style={{ height: '100%', width: '100%' }}>\r\n                    {({ height, width }) => {\r\n                        return (<MapComponent\r\n                            mapDivId={\"sectionMap\"}\r\n                    style={{height:height,width:width}}\r\n                />)}}\r\n            </AutoSizer>\r\n\r\n    </MapContext.Provider>\r\n}\r\nexport default Map;","import OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOsm from \"ol/source/OSM\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlScaleLine from \"ol/control/ScaleLine\";\r\nimport OlFeature from \"ol/Feature\";\r\nimport OlPolygon from \"ol/geom/Polygon\";\r\nimport {transform as OlTransform} from \"ol/proj\";\r\nlet COL_LAT = 'lat',\r\n    COL_LONG = 'lng';\r\nexport const longAccessor = (d) => {\r\n    return d[COL_LONG];\r\n}\r\nexport const latAccessor = (d) => {\r\n    return d[COL_LAT];\r\n}\r\n\r\n\r\n\r\nexport function fitBounds(map,name) {\r\n    if (map[name]){\r\n        map.getView().fit(map[name].layer.getSource().getExtent());\r\n    }\r\n}"],"names":["React","useMap","useContext","MapContext","mapDivId","children","role","passThroughProps","map","useLayoutEffect","setTarget","undefined","className","id","json2style","styleObject","temp_style","Object","keys","forEach","k","key_arrr","split","temp_op","string","OlStyle","charAt","toUpperCase","slice","name","data","onPlot","enable","remove","length","layer","removeLayer","styles","stroke","color","width","styleFunction","feature","this","getGeometry","getType","setStyle","newstyle","single","i","addGeoJson","geoJsonObject","vectorSource","OlSourceVector","features","OlFormatGeo","readFeatures","featureProjection","vectorLayer","OlVector","source","style","addLayer","addLineGeoData","d","OlFeature","geometry","OlLineString","arr","start","end","OlTransform","parseFloat","lng","lat","addIconGeoData","icon","newf","OlPoint","OlFromLonLat","image","crossOrigin","src","anchor","anchorXUnits","anchorYUnits","scale","addtomap","console","log","onClick","tooltipRef","useRef","useState","current","setCurrent","tooltip","Overlay","element","offset","positioning","holdTip","addOverlay","on","event","getFeaturesAtPixel","pixel","coordinate","getProperties","Section","setPosition","properties","useEffect","ref","position","zIndex","display","Box","sx","border","p","bgcolor","minWidth","Typography","plotCounties","ctPath","type","geometries","us","indexOf","NAME","toLowerCase","plotDistrict","us_dis","find","e","DIST_NM","coordinates","c","push","getView","fit","getSource","getExtent","fitBounds","plotRoad","filter","plotGPS","allCounties","plotCountyOption","allDistrics","plotDistrictOption","roadData","olMap","useMemo","OlLayerTile","preload","OlSourceOsm","OlMap","target","view","OlView","center","zoom","layers","addControl","OlScaleLine","units","value","MapTooltip","height"],"sourceRoot":""}