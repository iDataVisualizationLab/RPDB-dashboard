{"version":3,"file":"static/js/131.b0333a2d.chunk.js","mappings":"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","sources":["../node_modules/rbush/rbush.min.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/reverse.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/ol/AssertionError.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/ImageBase.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/KeyCode.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/MapEventType.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Overlay.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/ScaleLine.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/Source.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","topology","objects","type","features","geometries","map","feature","id","bbox","properties","geometry","transformPoint","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","j","output","Array","arcs","arc","points","k","array","reverse","point","line","ring","polygon","coordinates","object","_superPropBase","property","Object","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","value","_objectWithoutProperties","source","excluded","key","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","messages","AssertionError","code","message","name","Error","Property","CollectionEvent","element","index","Event","Collection","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","arr","elem","dispatchEvent","CollectionEventType","removeAt","insertAt","prev","set","except","BaseObject","ADD","REMOVE","Disposable","disposed","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","setGeometry","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","changed","unlistenByKey","listen","EventType","handleGeometryChange_","obj","styles","isArray","assert","getZIndex","createStyleFunction","removeChangeListener","EventTarget","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","src","IMAGE_DECODE","decode","then","catch","error","forEach","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","TileState","unlistenImage_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","naturalWidth","naturalHeight","handleImageLoad_","handleImageError_","Tile","expireIconCache","frameState","iconImageCache","map_","abstract","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","managed","layer","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","layerState","hasRenderer","inView","layerRenderer","getRenderer","getSource","getWrapX","order","distanceSq","b","some","TRUE","postRenderFunctions","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","position","width","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","getMap","hasListener","event","RenderEvent","parentNode","removeChild","calculateMatrices2D","dispatchRenderEvent","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","replaceChildren","display","scheduleExpireIconCache","MapRenderer","GroupEvent","LayerGroup","baseOptions","assign","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","dest","states","pos","getLayerStatesArray","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","getIntersection","BaseLayer","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","pixel","getCoordinateFromPixel","preventDefault","stopPropagation","MapEvent","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","PASSIVE_EVENT_LISTENERS","passive","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","values","updateActivePointers_","defaultPrevented","isMouseActionButton_","emulateClick_","button","VOID","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","removeEventListener","Target","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","PriorityQueue","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","appendChild","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","jj","setCollapsible","collectSourceAttributions_","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","mapEvent","updateElement_","Control","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","handleEvent","setActive","InteractionProperty","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","Interaction","centroid","pointerEvents","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","var_args","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","PointerInteraction","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","geometry_","startPixel_","endPixel_","setMap","startPixel","endPixel","px","left","top","getOverlayContainer","createOrUpdateGeometry","render_","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","minArea","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","fitInternal","box_","RenderBox","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","charCode","charCodeAt","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","clamp","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","getControls","getInteractions","getLayerGroup","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","addLayersFrom","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","toUserCoordinate","getProjection","applyTransform","group","extend","renderer","ready","loading","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","getActive","propagationStopped","tileQueue","isEmpty","hints","viewHints","ViewHint","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","MapEventType","resolveConstraints","dispose","removeNode","unobserve","ShadowRoot","host","getTarget","CompositeMapRenderer","MapBrowserEventHandler","observe","cancelAnimationFrame","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","requestAnimationFrame","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","equalsExtent","createOrUpdateEmpty","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setSize","parseInt","setViewportSize","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","ObjectEvent","oldValue","values_","keys","listener","silent","notify","Observable","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","len","ol_key","unByKey","Overlay","insertFirst","CLASS_SELECTABLE","autoPan","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","updatePixelPosition","getOverlayContainerStopEvent","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","outerWidth","outerHeight","myMargin","margin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","animation","box","offsetX","pageXOffset","offsetY","pageYOffset","getPosition","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","round","posX","posY","interimTile","transition_","transition","transitionStarts_","interpolate","setState","start","easeIn","TileRange","containsXY","tileRange","getHeight","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","newOptions","args","animationCount","series","complete","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","animationCallback","NaN","more","seriesComplete","elapsed","fraction","progress","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","currentResolution","w","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","getInteracting","adjustResolution","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","ANIMATING","INTERACTING","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cache","cacheSize","g","exec","hasAlpha","substr","startsWith","normalize","split","Number","fromStringInternal_","asArray","asColorLike","levels","info","level","console","target_","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","getUnits","pointResolutionUnits","pointResolution","getPointResolution","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","createScaleBar","toFixed","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","join","isLast","lengthString","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","propagate","dispatching","pendingRemovals","pr","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getRotatedViewport","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","cloneGeometries","clonedGeometries","geometries_","changeEventsKeys_","listenGeometriesChange_","geometryCollection","GeometryCollection","setGeometries","applyProperties","closestPoint","minSquaredDistance","closestPointXY","geometriesArray","concat","getGeometriesArrayRecursive","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","unlistenGeometriesChange_","Geometry","transformGeometryWithOptions","write","transformed","featureProjection","dataProjection","equivalentProjection","decimals","getObject","JSON","parse","readFeatureFromObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","defaultFeatureProjection","supportedMediaTypes","readProjection","setWorldExtent","adaptOptions","layout","ends","ends_","maxDeltaRevision_","setFlatCoordinates","getLayout","lineStrings","lineString","multiLineString","MultiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","extrapolate","lineStringsCoordinateAtM","inflateCoordinatesArray","LineString","midpoints","midpoint","interpolatePoint","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","setLayout","deflateCoordinatesArray","SimpleGeometry","multiPoint","MultiPoint","squaredDistance","squaredDx","inflateCoordinates","Point","deflateCoordinates","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","getEnds","newEndss","multiPolygon","MultiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","linearRingssContainsXY","linearRingssArea","right","orientLinearRingsArray","inflateMultiCoordinatesArray","flatCenters","linearRingssCenter","getInteriorPointsOfMultiArray","getFlatInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","readGeometry","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","writeGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","getGeometriesArray","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","setId","geoJSONFeatures","crs","JSONFeature","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","coord","getClosestPoint","computeExtent","tolerance","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getTransform","flatMidpoint_","flatMidpointRevision_","maxSquaredDelta","assignClosestPoint","forEachSegment","lineStringCoordinateAtM","lineStringLength","getCoordinateAt","douglasPeucker","intersectsLineString","deflateCoordinate","LinearRing","linearRingArea","flatInteriorPointRevision_","flatInteriorPoint_","linearRing","linearRingsContainsXY","linearRingsArea","orientLinearRings","flatCenter","getInteriorPointOfArray","getFlatInteriorPoint","linearRings","linearRingsAreOriented","quantizeArray","intersectsLinearRingArray","fromExtent","getSimplifiedGeometryInternal","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","lerp","squaredDelta","isRing","tmpPoint","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","coordinatesss","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","dimension","cumulativeLengths","lo","hi","m0","coordinatesExtent","point1","point2","intersectsLinearRing","linearRingIsClockwise","edge","isClockwise","reverseCoordinates","ret","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","ua","navigator","userAgent","toLowerCase","test","devicePixelRatio","WorkerGlobalScope","self","defineProperty","background_","background","LayerProperty","className_","state_","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","Promise","resolve","getData","prepareFrame","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","getLayer","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","layerExtent","getRenderSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","toSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","getImage","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","drawImage","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","CanvasLayerRenderer","CanvasTileLayerRenderer","BaseTileLayer","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","Text","font","maxAngle","placement","rotateWithView","textAlign","justify","textBaseline","backgroundFill","backgroundStroke","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","RBush","renderOrder","styleLike","createDefaultStyle","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","strokeStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","appendFlatPointCoordinates","endGeometry","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","defaultMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","VectorContext","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","reverseHitDetectionInstructions","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","beg","keep","saveTextStates_","setFillStrokeStyle","defaultPadding","p0","p1","p2","p3","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","textStrokeStyle","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","finish","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","replace","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","textIsArray","chunks","reduce","getTextDimensions","widths","heights","lineWidths","renderWidth","contextInstructions","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","fill_","setStrokeStyle_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","contextScale","imageOrLabel","dimensions","strokePadding","replayTextBackground_","drawImageOrLabel","repeatSize","setLineDash","createLabel","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","closePath","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","imageArgs","imageDeclutterBox","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute_","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","executeHitDetection","builderTypes","execute","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","setTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","imageBuilderGroup","imageReplay","getBuilder","textBuilderGroup","textReplay","drawText","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","drawCustom","getHitDetectionRenderer","getGeometries","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","executorGroup","vectorSource","endWorld","world","getRenderTransform","compositionContext","setupCompositionContext_","renderWorlds","releaseCompositionContext_","makeScale","transformToString","clipped","transforms","styleFunction","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","setImage","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","item","renderIfReadyAndVisible","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","CanvasVectorLayerRenderer","BaseVectorLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","metersPerUnit","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","Projection","PROJECTIONS","fromEPSG4326","toEPSG4326","atan","EPSG4326Projection","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","getter","getPointResolutionFunc","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","forEachLoadedTile","pixelContext","pixelContext_","err","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","LayerRenderer","brokenDiagonalRendering_","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","calculateSourceExtent","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","containsKey","getKeyZXY","TileCache","release","peekLast","fromKey","peekFirstKey","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","getDefaultTileGrid","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","setDefaultTileGrid","DEFAULT_MAX_ZOOM","half","TileSource","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","getFullTileRange","withinExtentAndZ","Source","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","defaultTileLoadFunction","imageTile","url","reprojectionErrorThreshold","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","generateTileUrlFunction_","UrlTile","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","startCharCode","stopCharCode","stop","expandUrl","setTileUrlFunction","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","forEach_","getAll","getInExtent","rbush","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","onerror","send","loadFeaturesXhr","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureAtCoordinateDirect","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","setLoader","CircleStyle","getRadius","getDisplacement","setOpacity","radius_","color_","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","size_","updateScaleFromWidthAndHeight","getSrc","iconImageSize","widthScale","heightScale","ImageStyle","taintedTestContext","IconImage","imageState_","tainted_","dispatchChangeEvent_","initializeImage_","replaceColor_","isTainted_","iconImage","IconImageCache","cache_","cacheSize_","maxCacheSize_","maxCacheSize","expire","shared","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","calculateLineJoinSize_","maxRadius","createRenderOptions","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","defaultStyles","font_","textAlign_","justify_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","transformStringDiv","create","setFromArray","transform1","transform2","compose","det","transformString","uidCounter_","ol_uid"],"sourceRoot":""}