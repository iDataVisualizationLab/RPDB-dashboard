{"version":3,"file":"static/js/155.2d7b6f66.chunk.js","mappings":"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","sources":["Providers/Database/Context.js","Providers/Database/Provider.js","Providers/Database/index.js","components/FileCollection/fileType.js","components/SectionCard/index.js","components/ReplaceFileDialog/index.js","components/FileCollection/UploadSegment.js","components/FileCollection/index.js","components/SectionForm/index.js","pages/Map/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext(null)\r\n\r\nexport default Context","import React, {useCallback, useEffect, useReducer} from 'react'\r\nimport Context from './Context'\r\nimport {_components} from \"../../containers/Database/internal\";\r\nimport {uniq} from 'lodash';\r\nimport {getApp} from \"../../containers/Database/app\";\r\n\r\nfunction reducer(state, action) {\r\n    const { type, path, isLoading=false,error = false,\r\n        hasError = false, value } = action;\r\n    switch (type) {\r\n        case \"LOADING_CHANGED\":\r\n            return { ...state, [path]: { ...state[path], isLoading } };\r\n        case \"VALUE_CHANGE\":\r\n            return {\r\n                ...state,\r\n                [path]: { ...state[path], value, isLoading, error, hasError },\r\n            };\r\n        case \"INIT\":\r\n            return {...state,isInit:value}\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nconst init = {\r\n    loading:false,\r\n    error:false,\r\n    isInit:false,\r\n    surveyType:{},\r\n    surveyLevel:{},\r\n    section:{}\r\n}\r\n\r\nconst Provider = ({  children, name }) => {\r\n    const [state, dispatch] = useReducer(reducer, init);\r\n    const _app = getApp(name);\r\n\r\n    useEffect(()=>{\r\n        if (!state['surveyType']) {\r\n            try {\r\n                dispatch({type: 'LOADING_CHANGED', path: 'surveyType', isLoading: true});\r\n                _app.getSurveyType().then(({data}) => {\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'surveyType', value: data, isLoading: false,});\r\n                }).catch(error => {\r\n                    dispatch({\r\n                        type: \"ERROR\",\r\n                        path: 'surveyType',\r\n                        isLoading: false,\r\n                        error,\r\n                        hasError: true,\r\n                    });\r\n                })\r\n                dispatch({type: 'LOADING_CHANGED', path: 'surveyLevel', isLoading: true});\r\n                _app.getSurveyLevel().then(({data}) => {\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'surveyLevel', value: data, isLoading: false,});\r\n                }).catch(error => {\r\n                    dispatch({\r\n                        type: \"ERROR\",\r\n                        path: 'surveyLevel',\r\n                        isLoading: false,\r\n                        error,\r\n                        hasError: true,\r\n                    });\r\n                })\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const isLoading = useCallback(\r\n        (path) => {\r\n            return state[path] ? state[path].isLoading : false;\r\n        },\r\n        [state]\r\n    );\r\n    const getList = useCallback(\r\n        (path) => {\r\n            return state[path] && state[path].value ? state[path].value : [];\r\n        },\r\n        [state]\r\n    );\r\n    const querySection = useCallback(\r\n        (Section) => {\r\n            dispatch({type: 'LOADING_CHANGED', path: 'section', isLoading: true});\r\n            _app.getSection(Section)\r\n                .then(({data})=> {\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'section', value: data, isLoading: false,});\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({\r\n                        type: \"ERROR\",\r\n                        path: 'section',\r\n                        isLoading: false,\r\n                        error,\r\n                        hasError: true,\r\n                    });\r\n                })\r\n        },\r\n        [state]\r\n    );\r\n    const getSection = useCallback(\r\n        (Section) => {\r\n            return state.section && state.section.value && Section===state.section.value.Section ? state.section.value : {};\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        <Context.Provider value={{\r\n            isLoading,\r\n            getList,\r\n            querySection,\r\n            getSection\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Provider;","import { useContext } from 'react'\r\nimport Context from './Context'\r\nexport { default as withDatabase } from './with.js'\r\nexport { default } from './Provider.js'\r\n\r\nexport function useDatabase() {\r\n    return useContext(Context)\r\n}","import {SvgIcon} from \"@mui/material\";\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\r\n\r\nconst fileList = {\r\n    'excel': {\r\n        type: 'xlsx',\r\n        icon: ({fontSize=\"large\",style={}})=><SvgIcon fontSize={fontSize} style={style}>\r\n            <path d=\"M20 16l-5.758-2.368L9 16v10.834A1.166 1.166 0 0 0 10.167 28h18.667A1.166 1.166 0 0 0 30 26.834V22z\"\r\n                  fill=\"#185c37\"/>\r\n            <path d=\"M20 4h-9.833A1.167 1.167 0 0 0 9 5.167V10l11 6 5 2.368L30 16v-6z\" fill=\"#21a366\"/>\r\n            <path d=\"M28.834 4H20v6h10V5.167A1.166 1.166 0 0 0 28.834 4z\" fill=\"#33c481\"/>\r\n            <path fill=\"#107c41\" d=\"M9 10h11v6H9zm11 6h10v6H20z\"/>\r\n            <path d=\"M17 11v11.83A1.178 1.178 0 0 1 15.83 24H9V10h7a1 1 0 0 1 1 1z\" opacity=\".5\"/>\r\n            <rect x=\"2.001\" y=\"9\" width=\"13.999\" height=\"13.999\" rx=\"1.167\" fill=\"#107c41\"/>\r\n            <path d=\"M5.092 20.375l2.831-4.387-2.593-4.363h2.087l1.415 2.789q.195.4.269.591h.018c.094-.211.191-.416.293-.616l1.513-2.764h1.916l-2.66 4.338 2.727 4.412H10.87l-1.635-3.063a2.569 2.569 0 0 1-.2-.409h-.02a1.88 1.88 0 0 1-.189.4l-1.684 3.072z\"\r\n                  fill=\"#fff\"/>\r\n        </SvgIcon>\r\n    },\r\n    'doc': {\r\n        type: 'doc',\r\n        icon: ({fontSize=\"large\",style={}})=><SvgIcon fontSize={fontSize} style={style} viewBox={'0 0 16 16'}>\r\n            <path d=\"M16 4V1a1.003 1.003 0 0 0-1-1H4a1 1 0 0 0-1 1v3l6.5 1.379z\" fill=\"#41a5ee\"/><path fill=\"#2b7cd3\" d=\"M15.999 4h-13v4L9.5 9.168 15.999 8V4z\"/><path fill=\"#185abd\" d=\"M16 8H3v4l6.499 1L16 12V8z\"/><path d=\"M3 12v3a1.003 1.003 0 0 0 1 1h11a1 1 0 0 0 1-1v-3z\" fill=\"#103f91\"/><path d=\"M10 4.003L3 4l.002 10H9a2 2 0 0 0 2-2V5.002a1 1 0 0 0-1-1z\" opacity=\".5\"/><rect y=\"3\" width=\"10\" height=\"10\" rx=\"1\" fill=\"#185abd\"/><path d=\"M3.352 9.54q.026.213.034.372h.02q.011-.15.045-.364t.065-.36L4.429 5H5.61l.945 4.126a6.335 6.335 0 0 1 .118.778h.016a6.293 6.293 0 0 1 .098-.753L7.543 5h1.075l-1.323 6H6.04l-.901-3.975q-.04-.171-.089-.448t-.06-.401h-.017q-.015.146-.06.435t-.073.427L3.992 11H2.716L1.382 5h1.094L3.3 9.197q.028.13.053.343z\" fill=\"#fff\"/>\r\n        </SvgIcon>\r\n    },\r\n    'pdf': {\r\n        type: 'pdf',\r\n        icon: ({fontSize=\"large\",style={}})=><SvgIcon fontSize={fontSize} style={style} viewBox={'0 0 14 16'}>\r\n            <g transform=\"matrix(.04589 0 0 .04589 -.66877 -.73379)\">\r\n                <polygon points=\"51.791 356.65 51.791 23.99 204.5 23.99 282.65 102.07 282.65 356.65\" fill=\"#fff\" strokeWidth=\"212.65\"/>\r\n                <path d=\"m201.19 31.99 73.46 73.393v243.26h-214.86v-316.66h141.4m6.623-16h-164.02v348.66h246.85v-265.9z\" strokeWidth=\"21.791\"/>\r\n            </g>\r\n            <g transform=\"matrix(.04589 0 0 .04589 -.66877 -.73379)\">\r\n                <polygon points=\"282.65 356.65 51.791 356.65 51.791 23.99 204.5 23.99 206.31 25.8 206.31 100.33 280.9 100.33 282.65 102.07\" fill=\"#fff\" strokeWidth=\"212.65\"/>\r\n                <path d=\"m198.31 31.99v76.337h76.337v240.32h-214.86v-316.66h138.52m9.5-16h-164.02v348.66h246.85v-265.9l-6.43-6.424h-69.907v-69.842z\" strokeWidth=\"21.791\"/>\r\n            </g>\r\n            <g transform=\"matrix(.04589 0 0 .04589 -.66877 -.73379)\" strokeWidth=\"21.791\">\r\n                <polygon points=\"258.31 87.75 219.64 87.75 219.64 48.667 258.31 86.38\"/>\r\n                <path d=\"m227.64 67.646 12.41 12.104h-12.41v-12.104m-5.002-27.229h-10.998v55.333h54.666v-12.742z\"/>\r\n            </g>\r\n            <g transform=\"matrix(.04589 0 0 .04589 -.66877 -.73379)\" fill=\"#ed1c24\" strokeWidth=\"212.65\">\r\n                <polygon points=\"311.89 284.49 22.544 284.49 22.544 167.68 37.291 152.94 37.291 171.49 297.15 171.49 297.15 152.94 311.89 167.68\"/>\r\n                <path d=\"m303.65 168.63 1.747 1.747v107.62h-276.35v-107.62l1.747-1.747v9.362h272.85v-9.362m-12.999-31.385v27.747h-246.86v-27.747l-27.747 27.747v126h302.35v-126z\"/>\r\n            </g>\r\n            <rect x=\"1.7219\" y=\"7.9544\" width=\"10.684\" height=\"4.0307\" fill=\"none\"/>\r\n            <g transform=\"matrix(.04589 0 0 .04589 1.7219 11.733)\" fill=\"#fff\" strokeWidth=\"21.791\"><path d=\"m9.216 0v-83.2h30.464q6.784 0 12.928 1.408 6.144 1.28 10.752 4.608 4.608 3.2 7.296 8.576 2.816 5.248 2.816 13.056 0 7.68-2.816 13.184-2.688 5.504-7.296 9.088-4.608 3.456-10.624 5.248-6.016 1.664-12.544 1.664h-8.96v26.368zm22.016-43.776h7.936q6.528 0 9.6-3.072 3.2-3.072 3.2-8.704t-3.456-7.936-9.856-2.304h-7.424z\"/><path d=\"m87.04 0v-83.2h24.576q9.472 0 17.28 2.304 7.936 2.304 13.568 7.296t8.704 12.8q3.2 7.808 3.2 18.816t-3.072 18.944-8.704 13.056q-5.504 5.12-13.184 7.552-7.552 2.432-16.512 2.432zm22.016-17.664h1.28q4.48 0 8.448-1.024 3.968-1.152 6.784-3.84 2.944-2.688 4.608-7.424t1.664-12.032-1.664-11.904-4.608-7.168q-2.816-2.56-6.784-3.456-3.968-1.024-8.448-1.024h-1.28z\"/><path d=\"m169.22 0v-83.2h54.272v18.432h-32.256v15.872h27.648v18.432h-27.648v30.464z\"/></g>\r\n        </SvgIcon>\r\n    },\r\n    'image': {\r\n        type: 'image',\r\n        icon: ({fontSize=\"large\",style={}})=><ImageIcon fontSize={fontSize} style={style} />\r\n    },\r\n    'unknown': {\r\n        type: undefined,\r\n        icon: ({fontSize=\"large\",style={}})=><InsertDriveFileOutlinedIcon fontSize={fontSize} style={style} />\r\n    },\r\n}\r\n\r\nconst fileExtension = {\r\n    xlsx: 'excel',\r\n    xls: 'excel',\r\n    doc: 'doc',\r\n    docx: 'doc',\r\n    pdf: 'pdf',\r\n    \"jpg\": 'image',\r\n    \"png\": 'image',\r\n    \"gif\": 'image',\r\n    \"webp\": 'image',\r\n    \"tiff\": 'image',\r\n    \"raw\": 'image',\r\n    \"bmp\": 'image',\r\n    \"heif\": 'image',\r\n    \"jpeg\": 'image',\r\n    \"svg\": 'image',\r\n    \"eps\": 'image',\r\n}\r\nfunction getFileType (name) {\r\n    const sec = name.split('.');\r\n    const tail = sec[sec.length-1].toLowerCase();\r\n    return fileExtension[tail];\r\n}\r\nexport {fileList,getFileType}","import {Chip, Collapse, Divider, ListItem, ListItemText, Typography} from \"@mui/material\";\r\nimport React from 'react'\r\n\r\n\r\nconst CustomTag = ({category,label,...props})=>{\r\n    return <Chip\r\n        label={<><Typography component=\"span\"\r\n                             variant=\"caption\"\r\n                             color=\"textSecondary\">\r\n            {category}\r\n        </Typography>\r\n            <Typography component=\"span\"\r\n                        style={{marginLeft:5}}\r\n                        variant=\"body2\">\r\n                | {label}\r\n            </Typography>\r\n        </>}\r\n        variant=\"outlined\"\r\n        {...props}\r\n    />\r\n}\r\n\r\nconst Fields = [\r\n    {accessorKey: 'CSJ', header: 'CSJ'},\r\n    {accessorKey: 'Highway', header: 'Highway'},\r\n    {accessorKey: 'County', header: 'County'},\r\n    {accessorKey: 'District', header: 'District'},\r\n    {accessorKey: 'State', header: 'State'},\r\n    {accessorKey: 'Direction', header: 'Direction'},\r\n    {accessorKey: 'Data Type', header: 'Data Type'},\r\n    {accessorKey: 'Reference Marker', header: 'Reference Marker'},\r\n    {accessorKey: 'GPS (Start)', header: 'GPS (Start)'},\r\n    {accessorKey: 'GPS (End)', header: 'GPS (End)'},\r\n    {accessorKey: 'Construction Year', header: 'Construction Year'},\r\n    {accessorKey: 'Horizontal Alignment', header: 'Horizontal Alignment'},\r\n    {accessorKey: 'Vertical Alignment', header: 'Vertical Alignment'},\r\n    {accessorKey: 'Pavement Type', header: 'Pavement Type'},\r\n    {accessorKey: 'Slab Thickness', header: 'Slab Thickness (in.)'},\r\n    {accessorKey: 'Basetype & Thickness', header: 'Basetype & Thickness (in.)'},\r\n    {accessorKey: 'Subgrade Treat & Thick', header: 'Subgrade Treat & Thick'},\r\n    {accessorKey: 'Shoulder Type', header: 'Shoulder Type'},\r\n    {accessorKey: 'Surface Texture', header: 'Surface Texture'},\r\n    {accessorKey: 'Concrete CAT', header: 'Concrete CAT'},\r\n    {accessorKey: 'Drainage', header: 'Drainage'},\r\n]\r\n\r\nconst SectionCard = ({data,id,highlighted,onSelected})=>{\r\n    const { Section, County, District, Highway } = data;\r\n\r\n    return <div key={`${Section}_${id}`}>\r\n        <ListItem alignItems=\"flex-start\" component={\"div\"} >\r\n            <ListItemText\r\n                primary={Section}\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <CustomTag\r\n                            category={'Highway'}\r\n                            label={Highway}\r\n                            size=\"small\"\r\n                            color=\"info\"\r\n                        />\r\n                        {(County&&(County!=='-'))&&<CustomTag\r\n                            category={'County'}\r\n                            label={County}\r\n                            size=\"small\"\r\n                        />}\r\n                        {(District&&(District!=='-'))&&<CustomTag\r\n                            category={'District'}\r\n                            label={District}\r\n                            size=\"small\"\r\n                        />}\r\n                    </React.Fragment>\r\n                }\r\n                onClick={onSelected}\r\n            />\r\n        </ListItem>\r\n        <Divider />\r\n    </div>\r\n}\r\n\r\nexport default SectionCard","import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography} from \"@mui/material\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\n\r\nfunction ReplaceFileDialog({ onClose, fileList, onReplace }) {\r\n    const [queue,setQueue] = useState([]);\r\n    const [current,setCurrent] = useState({});\r\n    useEffect(()=>{\r\n        const newq = fileList.map(f=>f);\r\n        setQueue(newq);\r\n        setCurrent(newq[0]);\r\n    },[fileList])\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleReplace = useCallback(() => {\r\n        onReplace(current);\r\n        queue.shift();\r\n        if (!queue.length)\r\n            onClose();\r\n        else {\r\n            setQueue(queue);\r\n            setCurrent(queue[0]);\r\n        }\r\n    },[current,queue]);\r\n    const handleReplaceAll = useCallback(() => {\r\n        queue.forEach(f=> onReplace(f));\r\n        onClose();\r\n    },[queue]);\r\n    const handleSkip = useCallback(() => {\r\n        queue.shift();\r\n        if (!queue.length)\r\n            onClose();\r\n        else {\r\n            setQueue(queue);\r\n            setCurrent(queue[0]);\r\n        }\r\n    },[current,queue]);\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={true}>\r\n            <DialogTitle>Replace or Skip {fileList.length} file{fileList.length>1?'s':''}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography>Already has file named \"{current.name}\"</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleReplace}>Replace</Button>\r\n                <Button onClick={handleSkip}>Skip</Button>\r\n                <Button onClick={handleReplaceAll} autoFocus>\r\n                    Replace All\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ReplaceFileDialog","import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    IconButton,\r\n    LinearProgress, Stack,\r\n    SvgIcon,\r\n    Toolbar,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport './index.scss';\r\nimport {fileList, getFileType} from \"./fileType\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport {getApp} from \"../../containers/Database/app\";\r\nimport ReplaceFileDialog from \"../ReplaceFileDialog\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\n\r\n// reference feature from https://www.syncfusion.com/react-components/react-file-upload\r\nfunction UploadWraper({title=\"Media files\",category=\"media\",multiple,Section,filelist}) {\r\n\r\n    // drag state\r\n    const [dragActive, setDragActive] = useState(false);\r\n    const [_fileList,set_FileList] = useState([]);\r\n    const [uploadProgress,setUploadProgress] = useState({});\r\n    const [fileQueue,setFileQueue] = useState([]);\r\n    const [replaceList,setReplaceList] = useState([]);\r\n    const {openDialog,closeDialog}=useQuestions();\r\n    // ref\r\n    const inputRef = React.useRef(null);\r\n\r\n    useEffect(()=>{\r\n        console.log(filelist)\r\n        if (filelist) {\r\n            set_FileList(filelist.map(f=>({\r\n                data:f,\r\n                name:f.Name,\r\n                type: getFileType(f.Name)\r\n            })))\r\n        }else {\r\n            set_FileList([])\r\n        }\r\n    },[filelist])\r\n    // handle drag events\r\n    const handleDrag = function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            uploadFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function(e) {\r\n        e.preventDefault();\r\n        if (e.target.files){\r\n            uploadFiles(e.target.files);\r\n        }\r\n    };\r\n    const onUpLoadFile = (file,surveyType)=>{\r\n        const formData = new FormData();\r\n        formData.append(\"Section\",Section);\r\n        formData.append(\"SurveyType\",surveyType);\r\n        formData.append(\"file\",file);\r\n        return getApp().uploadSurveyData(formData,progress => {\r\n            const { total, loaded } = progress;\r\n            const totalSizeInMB = total / 1000000;\r\n            const loadedSizeInMB = loaded / 1000000;\r\n            const uploadPercentage = (loadedSizeInMB / totalSizeInMB) * 100;\r\n            setUploadProgress({...uploadProgress,[file.name]:uploadPercentage.toFixed(2)});\r\n        }).then(({data})=>{\r\n            delete uploadProgress[file.name]\r\n            _fileList.find(d=>d.name===file.name).data = data;\r\n            set_FileList(_fileList);\r\n            setUploadProgress(uploadProgress);\r\n        }).catch(e=>{\r\n\r\n        })\r\n    }\r\n    const uploadFiles = function(files){\r\n        // get file add to queue\r\n        const replaceList = [];\r\n        const uploadList = [];\r\n        for(let i =0; i < files.length; i++) {\r\n            // check existed file\r\n            if (_fileList.find(d=>d.name===files[i].name))\r\n                replaceList.push(files[i]);\r\n            else {\r\n                uploadList.push(files[i]);\r\n                uploadProgress[files[i].name] = 0;\r\n                _fileList.push({data:{},name:files[i].name,type: getFileType(files[i].name)});\r\n            }\r\n        }\r\n        setFileQueue(fileQueue)\r\n        setUploadProgress({...uploadProgress});\r\n        set_FileList(_fileList);\r\n        uploadList.forEach(f=>onUpLoadFile(f,category));\r\n        setReplaceList(replaceList);\r\n    }\r\n    const deleteFile = function (file) {\r\n        openDialog({\r\n            id: 'deleteFile',\r\n            title: 'Delete Survey data',\r\n            message: `Do you want to delete \"${file.name}\" ? This action can't be undo.`,\r\n            action: 'YES',\r\n            handleAction: ()=>{\r\n                getApp().deleteSurveyData(file.data).then(()=>{\r\n                    set_FileList(_fileList.filter(d=>d.name!==file.name));\r\n                })\r\n                closeDialog({id:'deleteFile'})\r\n            }\r\n        })\r\n    }\r\n    const onReplaceFile = (file)=>{\r\n        uploadProgress[file.name] = 0;\r\n        setUploadProgress({...uploadProgress});\r\n        onUpLoadFile(file,category)\r\n    }\r\n\r\n// triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const onView = (file) => {\r\n        const url = getApp().getFilePath({Section,SurveyType:category,Name:file.name});\r\n        window.open(`https://docs.google.com/gview?url=${url}`, '_blank', 'toolbar=0,location=0,menubar=0');\r\n        // `https://docs.google.com/gview?url=http://www.depts.ttu.edu/techmrtweb/rpdb/UploadedSectionData/SurveyData/4-I40-1/Deflections/4I401GN062410.xlsx`\r\n    }\r\n\r\n    return (<>\r\n        <Card sx={{m:1,p:0}} elevation={4}>\r\n            <CardContent sx={{display:'flex', alignItems:'center', borderBottomColor:(theme)=>theme.palette.primary.light,\r\n                borderWidth:0,borderBottomWidth:1, borderStyle: 'solid', pt:1,pb:1}}>\r\n                    <Typography sx={{flexGrow:1}}>{title}</Typography>\r\n                    <IconButton onClick={onButtonClick} size=\"small\"><CloudUploadIcon/></IconButton>\r\n            </CardContent>\r\n            <CardContent>\r\n                <form className=\"segment-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()} style={{margin:'auto'}}>\r\n                    <input ref={inputRef} type=\"file\" className=\"input-file-upload\" multiple={multiple} onChange={handleChange} />\r\n                    <label htmlFor=\"input-file-upload\">\r\n                        <Grid container  className={`label-file-upload ${!_fileList.length?'has-border':\"\"} ${dragActive ? \"drag-active\" : \"\"}` }>\r\n                            {!_fileList.length?<Grid item xs={12} sx={{textAlign: 'center'}}>\r\n                                <Typography>Drag & Drop files</Typography>\r\n                            </Grid>:<Grid item xs={12} container sx={{textAlign: 'center'}} spacing={1}>\r\n                                {_fileList.map(f=><Grid item key={f.name} className={'fileHolder'}>\r\n                                    <IconButton size={\"small\"} className={'deleteIcon'} onClick={()=>deleteFile(f)}>\r\n                                        <Close fontSize=\"inherit\"/>\r\n                                    </IconButton>\r\n                                    <Stack style={{maxWidth:100}} alignItems={\"center\"} spacing={1} onClick={()=>onView(f)}>\r\n\r\n                                        {(fileList[f.type]??fileList['unknown']).icon(uploadProgress[f.name]?{style:{opacity:0.5}}:{})}\r\n                                        {uploadProgress[f.name]&&<LinearProgress variant=\"determinate\" value={uploadProgress[f.name]}\r\n                                                         style={{maxWidth: 80, width: '100%'}}/>}\r\n                                        <Typography variant={\"body2\"} gutterBottom style={{overflowWrap: 'break-word',maxWidth:100}}>{f.name}</Typography>\r\n                                    </Stack>\r\n                                </Grid>)}\r\n                            </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n                    </label>\r\n                    { dragActive && <div className=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div> }\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n        {(!!replaceList.length)&&<ReplaceFileDialog onClose={()=>setReplaceList([])} fileList={replaceList} onReplace={onReplaceFile}/>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UploadWraper","import {useEffect, useState} from \"react\";\r\nimport UploadWraper from \"./UploadSegment\";\r\nimport {getApp} from \"../../containers/Database/app\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {group} from \"d3\";\r\n\r\nfunction FileCollection({Section,SurveyLevels,SurveyTypes,list}){\r\n    const {getList} = useDatabase();\r\n    const [fileByType,setFileByType] = useState(new Map())\r\n    const onEditFile = (file,{SurveyLevel,SurveyType})=>{\r\n        return getApp().editSurveyData(Section,file)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setFileByType(group(list??[],d=>d[\"Survey Type\"]));\r\n    },[list])\r\n\r\n    return (<>\r\n        {getList('surveyType').map((t)=><UploadWraper levels={getList('surveyLevel')}\r\n                                                      Section={Section}\r\n                                                      filelist={fileByType.get(t['Short Name'])}\r\n                                                           category={t['Short Name']}\r\n            title={t.Name}\r\n            key={t.Name}\r\n            onEditFile={onEditFile}/>)}\r\n        </>)\r\n}\r\nexport default FileCollection","import * as React from 'react';\r\nimport * as yup from 'yup';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Fields, counties, districts, getApp} from \"../../containers/Database/app\";\r\nimport {\r\n    Autocomplete,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogTitle,\r\n    IconButton,\r\n    Stack,\r\n    Toolbar,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {Edit as EditIcon, Close as CloseIcon, LocationOn} from '@mui/icons-material';\r\nimport FileCollection from \"../FileCollection\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {useFormik} from \"formik\";\r\n\r\nyup.addMethod(yup.string, \"gpsFormat\", function (errorMessage) {\r\n    return this.test(`test-gps-format`, errorMessage, function (value) {\r\n        const { path, createError } = this;\r\n        const checkMark = value?(value==='-'?[0,0]:value.match(/(N|W|n|w)[-+]?([0-9]*\\.[0-9]+|[0-9]+)°( |)[-+]?([0-9]*\\.[0-9]+|[0-9]+)'( |)[-+]?([0-9]*\\.[0-9]+|[0-9]+)\"/g)):null;\r\n        return (\r\n            (checkMark&&checkMark.length===2) ||\r\n            createError({ path, message: errorMessage })\r\n        );\r\n    });\r\n});\r\n\r\nconst validationSchema = yup.object({\r\n    Section: yup\r\n        .string('Enter your password')\r\n        .min(3, 'Section should be of minimum 3 characters length')\r\n        .required('Section is required'),\r\n    'GPS (Start)': yup.string().gpsFormat('Wrong GPS format'),\r\n    'GPS (End)': yup.string().gpsFormat('Wrong GPS format'),\r\n});\r\n\r\nconst fieldMeta = {\r\n    'Section':{xs:6},\r\n    'CSJ': {xs:6},\r\n    'Highway': {xs:6},\r\n    'County': {xs:6},\r\n    'District': {xs:6},\r\n    'State': {xs:6},\r\n    'Direction': {xs:6},\r\n    'Data Type': {},\r\n    'Reference Marker': {},\r\n    'GPS (Start)': {},\r\n    'GPS (End)': {},\r\n    'Construction Year': {},\r\n    'Horizontal Alignment': {},\r\n    'Vertical Alignment': {},\r\n    'Pavement Type': {},\r\n    'Slab Thickness': {},\r\n    'Basetype & Thickness': {},\r\n    'Subgrade Treat & Thick': {},\r\n    'Shoulder Type': {},\r\n    'Surface Texture': {},\r\n    'Concrete CAT': {},\r\n    'Drainage': {},\r\n}\r\nconst emptyArray=[];\r\nconst emptyObject={};\r\nconst emptyFunction=()=>{};\r\nfunction RenderField ({accessorKey,xs,type,options=emptyArray,InputLabelProps,...props}) {\r\n\r\n    return <Grid item xs={xs} key={accessorKey}>\r\n        {(type==='choice')?\r\n            <Autocomplete\r\n                fullWidth\r\n                size=\"small\"\r\n                options={options??[]}\r\n                {...props}\r\n                renderInput={(params) => <TextField label={props.label} {...params} />}\r\n            />:(type==='gps')?\r\n                <TextField\r\n                    fullWidth\r\n                    type={type}\r\n                    size=\"small\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                        ...InputLabelProps\r\n                    }}\r\n                    {...props}/>\r\n            :<TextField\r\n                fullWidth\r\n                type={type}\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            {...props}/>}\r\n    </Grid>\r\n}\r\n\r\nexport default function SectionForm({Section,onClose=emptyFunction}) {\r\n    const [isLoading,setIsLoading] = useState(true);\r\n    const [openGPSFormat,setOpenGPSFormat] = useState();\r\n    // const [value,setValue] = useState({});\r\n    const {getSection,querySection,isLoading: checkLoading} = useDatabase();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            debugger\r\n            alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n\r\n    useEffect(()=>{\r\n        querySection(Section);\r\n    },[Section]);\r\n\r\n    useEffect(()=>{\r\n        setIsLoading(checkLoading('section'));\r\n    },[checkLoading('section')]);\r\n\r\n    useEffect(()=>{\r\n        // setValue(getSection(Section));\r\n        // value[\"SurveyData\"]\r\n        const val = (getSection(Section))\r\n        if (val.Section)\r\n            formik.setValues(getSection(Section))\r\n    },[getSection(Section)])\r\n    return (\r\n        <div key={`form_${Section}`}>\r\n            <Box\r\n                component=\"form\"\r\n                // noValidate\r\n                onSubmit={formik.handleSubmit}\r\n                // autoComplete=\"off\"\r\n            >\r\n                <Toolbar sx={{p:0}}>\r\n                    <Button\r\n                        edge=\"start\"\r\n                        aria-label=\"edit\"\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        startIcon={<EditIcon />}\r\n                        type=\"submit\"\r\n                    >\r\n                        Edit\r\n                    </Button >\r\n                    <Button\r\n                        edge=\"start\"\r\n                        aria-label=\"edit\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<LocationOn />}\r\n                    >\r\n                        Location\r\n                    </Button >\r\n                    <Typography sx={{ flexGrow: 1 }}></Typography>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        aria-label=\"edit\"\r\n                        size=\"small\"\r\n                        onClick={onClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <Grid container spacing={1}>\r\n                    {Fields.map(({accessorKey,header,type,options})=>\r\n                        <RenderField key={accessorKey}\r\n                                     label={header}\r\n                                     name={header}\r\n                                     value={formik.values[accessorKey]?(formik.values[accessorKey]==='-'?null:formik.values[accessorKey]):null}\r\n                                     xs={fieldMeta[accessorKey].xs??6}\r\n                                     onChange={formik.handleChange}\r\n                                     error={Boolean(formik.errors[accessorKey])}\r\n                                     helperText={formik.errors[accessorKey]}\r\n                                     accessorKey={accessorKey}\r\n                                     options={options}\r\n                                     type={type}\r\n                        />)}\r\n                    <Grid item xs={12}>\r\n                        <FileCollection Section={formik.values['Section']} list={formik.values[\"SurveyData\"]}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            {openGPSFormat&&<GPSDialog\r\n                selectedValue={formik.values[openGPSFormat.key]}\r\n                open={true}\r\n                onClose={(val) => formik.setValue(openGPSFormat.key,val)}\r\n            />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst validationSchemaGPS = yup.object({\r\n    Na: yup.number(),\r\n    Nb: yup.number(),\r\n    Nc: yup.number(),\r\n    Wa: yup.number(),\r\n    Wb: yup.number(),\r\n    Wc: yup.number(),\r\n});\r\n\r\nfunction GPSDialog(props) {\r\n    const { onClose, selectedValue, open, value } = props;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            Na:0,\r\n            Nb:0,\r\n            Nc:0,\r\n            Wa:0,\r\n            Wb:0,\r\n            Wc:0,\r\n        },\r\n        validationSchema: validationSchemaGPS,\r\n        onSubmit: (values) => {\r\n            debugger\r\n            alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n    useEffect(()=>{\r\n        if (value) {\r\n            const dicarr = value.match(/[A-Z]/gi);\r\n            if (dicarr !== null) {\r\n                const numstrarr = value.split(/[A-Z]/i)\r\n                const lat = str2num(numstrarr[1]);\r\n                const long = str2num(numstrarr[2]);\r\n                if (dicarr[0] === \"S\" || dicarr[1] === \"s\") {\r\n                    lat[0] = -lat[0];\r\n                }\r\n                if (dicarr[1] === \"E\" || dicarr[1] === \"e\") {\r\n                    long[0] = -long[0];\r\n                }\r\n                formik.setValues({\r\n                    Na: lat[0],\r\n                    Nb: lat[1],\r\n                    Nc: lat[2],\r\n                    Wa: long[0],\r\n                    Wb: long[1],\r\n                    Wc: long[2],\r\n                })\r\n            }\r\n\r\n            function str2num(str) {\r\n                return str.split(/�|'|\"|°/).map(d => +d);\r\n            }\r\n        }\r\n    },[value])\r\n\r\n    const handleClose = () => {\r\n        onClose(value);\r\n    };\r\n    const handleSave = () => {\r\n        const {Na,Nb,Nc,Wa,Wb,Wc} = formik.values;\r\n        onClose(`N${Na}°${Nb}' ${Nc}\" W${Wa}°${Wb}' ${Wc}\"`);\r\n    };\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>GPS format</DialogTitle>\r\n            <Stack direction=\"row\" spacing={1} sx={{marginLeft:5,marginRight:5}}>\r\n                <Typography>N</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Na\"}\r\n                    value={formik.values.Na}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography>°</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Nb\"}\r\n                    value={formik.values.Nb}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography>'</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Nc\"}\r\n                    value={formik.values.Nc}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography style={{marginRight:10 }}>\" </Typography>\r\n                <Typography>W</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Wa\"}\r\n                    value={formik.values.Wa}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography>°</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Wb\"}\r\n                    value={formik.values.Wb}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography>'</Typography>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    hiddenLabel\r\n                    size=\"small\"\r\n                    type={\"number\"}\r\n                    name={\"Wc\"}\r\n                    value={formik.values.Wc}\r\n                    onChange={formik.handleChange}\r\n                    sx={{maxWidth:50}}\r\n                />\r\n                <Typography>\"</Typography>\r\n            </Stack>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n                <Button onClick={handleSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import AutoSizer from 'lp-react-virtualized-auto-sizer-react-18'\r\nimport {\r\n    Chip,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography,\r\n    Paper,\r\n} from '@mui/material'\r\nimport { FilterList } from '@mui/icons-material'\r\nimport FilterDrawer from 'material-ui-shell/lib/components/FilterDrawer'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, {useEffect, useCallback, useState, useRef, useTransition} from 'react'\r\nimport SearchField from 'material-ui-shell/lib/components/SearchField'\r\nimport { ViewportList } from 'react-viewport-list';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2'\r\nimport { useFilter } from 'material-ui-shell/lib/providers/Filter'\r\nimport { useIntl } from 'react-intl'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport {getApp} from \"../../containers/Database/app\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Map from \"../../components/Map\";\r\nimport {uniq,flatten} from \"lodash\";\r\nimport SectionCard from \"../../components/SectionCard\";\r\nimport SectionForm from \"../../components/SectionForm\";\r\n// const Map = lazy(() => import(\"../../components/Map\"));\r\n\r\nconst filterName = 'sectionData'\r\nconst emptysearch ={};\r\nconst emptyqueries =[];\r\nconst MapPage = () => {\r\n    const intl = useIntl()\r\n    const { openFilter, getList, getFilter, setSearch } = useFilter()\r\n\r\n    const { queries = emptyqueries, search = emptysearch } = getFilter(filterName)\r\n    const { value: searchValue = '' } = search\r\n\r\n    const [fields,setFields] = useState([]);\r\n    const [source,setSource] = useState([]);\r\n    const [allCounties,setAllCounties] = useState([]);\r\n    const [allDistrics,setAllDistrics] = useState([]);\r\n    const [list,setList] = useState([]);\r\n    const [selectedSection,setSelectedSection] = useState({})\r\n\r\n    const [isPending,startTransition] = useTransition();\r\n    useEffect(()=>{\r\n        getApp().getSections().then(({data})=>{\r\n            return getApp().getSectionFields().then(({data:fields})=>{\r\n                setFields(fields.map(f=>({name:f.name,label:f.name})));\r\n                // clean data\r\n                data.forEach(d=>{\r\n                    if (d['GPS (End)'] !== null && d['GPS (End)'] !== '-')\r\n                        d['_GPSEnd'] = dmstoLongLat(d['GPS (End)']);\r\n                    if (d['GPS (Start)'] !== null && d['GPS (Start)'] !== '-')\r\n                        d['_GPSStart'] = dmstoLongLat(d['GPS (Start)']);\r\n                    if (d['County'] !== null && d['County'] !== '-')\r\n                        d['_County'] = seperateStr(d['County'])\r\n                });\r\n                setSource(data, fields);\r\n            })\r\n        }).catch(()=>{\r\n            setFields([]);\r\n            setSource([]);\r\n        })\r\n    },[])\r\n    const listRef = useRef(null)\r\n    const viewboxRef = useRef(null)\r\n\r\n    // useEffect(() => {\r\n    //     if (listRef.current) {\r\n    //         listRef.current.scrollToItem(0, 'center')\r\n    //     }\r\n    // }, [listRef])\r\n\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            const list = getList(filterName, source, fields);\r\n            setList(list);\r\n            setAllCounties(uniq(flatten(list.filter(d=>d[\"_County\"]!==null).map(d=>d[\"_County\"]))));\r\n            setAllDistrics(uniq(flatten(list.filter(d=>d[\"District\"]!==null).map(d=>d[\"District\"]))));\r\n        });\r\n    },[queries,search,source, fields])\r\n    const Row = (item,i) => {\r\n        return <SectionCard data={item} id={i}\r\n        highlighted={selectedSection.Section===item.Section}\r\n                            onSelected={()=>setSelectedSection(item)}\r\n        />\r\n    }\r\n    const onCloseDetail = useCallback(()=>{\r\n        setSelectedSection({});\r\n    },[selectedSection])\r\n\r\n    const onSetSeclectedSection = useCallback((Section)=>{\r\n        const selected = list.find(d=>d.Section===Section);\r\n        if (selected)\r\n            setSelectedSection(selected);\r\n    },[list])\r\n    return (\r\n        <Page\r\n            pageTitle={intl.formatMessage(\r\n                {\r\n                    id: 'map',\r\n                    defaultMessage: 'Section information',\r\n                },\r\n                { count: list.length }\r\n            )}\r\n            contentStyle={{ overflow: 'hidden' }}\r\n            appBarContent={\r\n                <Toolbar disableGutters>\r\n                    <SearchField\r\n                        initialValue={searchValue}\r\n                        onChange={(v) => {\r\n                            setSearch(filterName, v)\r\n                        }}\r\n                    />\r\n                    <IconButton color=\"inherit\" onClick={() => openFilter(filterName)}>\r\n                        <FilterList color={queries.length > 0 ? 'secondary' : undefined} />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            }\r\n        >\r\n            <Grid container style={{ height: '100%' }}>\r\n                <Grid item xs={5} md={4} sx={{zIndex:1}}>\r\n                    <Paper elevation={16} sx={{ height: '100%', width: '100%', p:1 }} ref={viewboxRef}>\r\n                        {selectedSection.Section&& <Scrollbars><SectionForm Section={selectedSection?selectedSection.Section:undefined} onClose={onCloseDetail}/></Scrollbars>}\r\n                        <Scrollbars style={{display:selectedSection.Section?'none':undefined}}>\r\n                            <ViewportList\r\n                                ref={listRef}\r\n                                viewportRef={viewboxRef}\r\n                                items={list}\r\n                            >\r\n                                {Row}\r\n                            </ViewportList>\r\n                        </Scrollbars>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={7} md={8} style={{height: '100%'}}>\r\n                    <Map allCounties={allCounties} plotCountyOption={true}\r\n                         allDistrics={allDistrics} plotDistrictOption={true}\r\n                         roadData={list}\r\n                         onClick={onSetSeclectedSection}\r\n                    ></Map>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <FilterDrawer fields={fields} name={filterName} />\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default MapPage\r\n\r\nconst COL_LAT = 'lat',\r\n    COL_LONG = 'lng';\r\n\r\nfunction dmstoLongLat(string){\r\n    const dicarr = string.match(/[A-Z]/gi);\r\n    let temp = {};\r\n    if(dicarr !==null) {\r\n        const numstrarr = string.split(/[A-Z]/i)\r\n        temp[COL_LONG] =  convertorGPS(str2num(numstrarr[2]));\r\n        temp[COL_LAT] = convertorGPS(str2num(numstrarr[1]));\r\n        if (dicarr[0] === \"S\"||dicarr[1] === \"s\") {\r\n            temp[COL_LAT] = -temp[COL_LAT];\r\n        }\r\n        if (dicarr[1] === \"W\"||dicarr[1] === \"w\") {\r\n            temp[COL_LONG] = -temp[COL_LONG];\r\n        }\r\n    }else{\r\n        const numstrarr = string.split(',');\r\n        temp[COL_LONG] =  +numstrarr[1];\r\n        temp[COL_LAT] = +numstrarr[0];\r\n    }\r\n    return temp;\r\n    function str2num(str){\r\n        return str.split(/�|'|\"|°/).map(d=>+d);\r\n    }\r\n    function convertorGPS([d,min,sec]){\r\n        return d + (min/60) + (sec/3600);\r\n    }\r\n}\r\n\r\nfunction LongLattodms(arr){\r\n    try {\r\n        let str = '';\r\n        let tempNum = arr[COL_LAT];\r\n        if (tempNum < 0) {\r\n            str += 'S';\r\n            tempNum = -tempNum;\r\n        } else\r\n            str += 'N';\r\n        str += num2str(tempNum) + ', ';\r\n        tempNum = arr[COL_LONG];\r\n        if (tempNum < 0) {\r\n            str += 'W';\r\n            tempNum = -tempNum;\r\n        } else\r\n            str += 'E';\r\n        str += num2str(tempNum);\r\n\r\n        return str;\r\n    }catch(e){\r\n        return arr;\r\n    }\r\n    function num2str (num){\r\n        let d = Math.ceil(num);\r\n        num = (num-d)*60;\r\n        let m = Math.ceil(num);\r\n        let sec = (num-m)*60;\r\n        return d+'o'+m+\"'\"+'\"';\r\n    }\r\n}\r\n\r\nfunction seperateStr(str){\r\n    return str.split(/&|\\/| and /).map(d=>d.trim().toLowerCase());\r\n}"],"names":["React","reducer","state","action","type","path","isLoading","error","hasError","value","isInit","Error","init","loading","surveyType","surveyLevel","section","children","name","useReducer","dispatch","_app","getApp","useEffect","getSurveyType","then","data","catch","getSurveyLevel","e","useCallback","getList","querySection","Section","getSection","useDatabase","useContext","Context","fileList","icon","fontSize","style","d","fill","opacity","x","y","width","height","rx","viewBox","transform","points","strokeWidth","undefined","fileExtension","xlsx","xls","doc","docx","pdf","getFileType","sec","split","tail","length","toLowerCase","CustomTag","category","label","props","Chip","Typography","component","variant","color","marginLeft","id","onSelected","highlighted","County","District","Highway","ListItem","alignItems","ListItemText","primary","secondary","size","onClick","Divider","onClose","onReplace","useState","queue","setQueue","current","setCurrent","newq","map","f","handleReplace","shift","handleReplaceAll","forEach","handleSkip","Dialog","open","DialogTitle","DialogContent","DialogActions","Button","autoFocus","title","multiple","filelist","dragActive","setDragActive","_fileList","set_FileList","uploadProgress","setUploadProgress","fileQueue","setFileQueue","replaceList","setReplaceList","useQuestions","openDialog","closeDialog","inputRef","console","log","Name","handleDrag","preventDefault","stopPropagation","onUpLoadFile","file","formData","FormData","append","uploadSurveyData","progress","total","uploadPercentage","loaded","toFixed","find","uploadFiles","files","uploadList","i","push","Card","sx","m","p","elevation","CardContent","display","borderBottomColor","theme","palette","light","borderWidth","borderBottomWidth","borderStyle","pt","pb","flexGrow","IconButton","click","CloudUpload","className","onDragEnter","onSubmit","margin","ref","onChange","target","htmlFor","container","item","xs","textAlign","spacing","message","handleAction","deleteSurveyData","filter","Close","Stack","maxWidth","url","getFilePath","SurveyType","window","onView","LinearProgress","gutterBottom","overflowWrap","onDragLeave","onDragOver","onDrop","dataTransfer","list","SurveyLevels","SurveyTypes","Map","fileByType","setFileByType","onEditFile","SurveyLevel","editSurveyData","group","t","levels","get","yup","errorMessage","this","test","createError","checkMark","match","validationSchema","min","required","gpsFormat","fieldMeta","emptyArray","emptyFunction","RenderField","accessorKey","options","InputLabelProps","Autocomplete","fullWidth","renderInput","params","TextField","shrink","SectionForm","setIsLoading","openGPSFormat","checkLoading","formik","useFormik","initialValues","values","alert","JSON","stringify","setValues","Box","handleSubmit","Toolbar","edge","startIcon","Edit","LocationOn","Fields","header","handleChange","Boolean","errors","helperText","GPSDialog","selectedValue","key","val","setValue","validationSchemaGPS","Na","Nb","Nc","Wa","Wb","Wc","str2num","str","dicarr","numstrarr","lat","long","handleClose","direction","marginRight","hiddenLabel","filterName","emptysearch","emptyqueries","intl","useIntl","useFilter","openFilter","getFilter","setSearch","queries","search","searchValue","fields","setFields","source","setSource","allCounties","setAllCounties","allDistrics","setAllDistrics","setList","selectedSection","setSelectedSection","useTransition","startTransition","getSections","getSectionFields","dmstoLongLat","trim","listRef","useRef","viewboxRef","uniq","flatten","onCloseDetail","onSetSeclectedSection","selected","Page","pageTitle","formatMessage","defaultMessage","count","contentStyle","overflow","appBarContent","disableGutters","initialValue","v","FilterList","md","zIndex","Paper","Scrollbars","ViewportList","viewportRef","items","plotCountyOption","plotDistrictOption","roadData","COL_LAT","COL_LONG","string","temp","convertorGPS"],"sourceRoot":""}