{"version":3,"file":"static/js/776.c44d1109.chunk.js","mappings":"8OA6FA,UAnFiB,WAAO,IAAD,EACfA,GAAOC,EAAAA,EAAAA,KACb,GAAuBC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA5BC,EAAI,KAACC,EAAO,KAQnB,OAPEC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,MAASC,mBAAmBC,MAAK,YAAW,IAATL,EAAI,EAAJA,KAC/BA,EAAKM,cAAgBN,EAAKM,cAAcC,KAAI,SAAAC,GAAC,OAAEA,EAAEC,QAAQ,IACzDC,QAAQC,IAAIX,GACZC,EAAQD,EACZ,GACH,GAAE,KAEF,SAAC,UAAI,CAACY,UAAWf,EAAKgB,cAAc,CAAEC,GAAI,cAAgBC,aAAc,CAAEC,SAAU,UAAW,UAC3F,UAAC,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAACC,EAAE,GAAG,WAClC,SAAC,IAAI,CAACC,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAI,CAACC,UAAW,GAAG,UAChB,UAAC,IAAW,YACR,UAAC,IAAU,CAACJ,GAAI,CAAEK,SAAU,IAAMC,MAAM,iBAAiBC,cAAY,YAChE7B,EAAKgB,cAAc,CAAEC,GAAI,UAAW,oBAEzC,SAAC,IAAU,CAACa,QAAQ,KAAKC,UAAU,MAAK,SACnC5B,EAAK6B,gBAEV,UAAC,IAAU,CAACF,QAAS,UAAWF,MAAM,iBAAgB,UACjD5B,EAAKgB,cAAc,CAAEC,GAAI,aAAc,IAAEd,EAAK8B,mBAAmB,IAAEjC,EAAKgB,cAAc,CAAEC,GAAI,qBAK7G,SAAC,IAAI,CAACO,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAI,CAACC,UAAW,GAAG,UAChB,UAAC,IAAW,YACR,SAAC,IAAU,CAACJ,GAAI,CAAEK,SAAU,IAAMC,MAAM,iBAAiBC,cAAY,WAAC,uBAGtE,SAAC,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAAK,SACnC5B,EAAK+B,gBAAgB/B,EAAK+B,gBAAgB,MAE/C,UAAC,IAAU,CAACJ,QAAS,UAAWF,MAAM,iBAAgB,UAAC,YACzCzB,EAAKgC,kBAAkB,oBAKjD,SAAC,IAAI,CAACX,MAAI,EAACC,GAAI,EAAE,UACb,SAAC,IAAI,CAACC,UAAW,GAAG,UAChB,UAAC,IAAW,YACR,SAAC,IAAU,CAACJ,GAAI,CAAEK,SAAU,IAAMC,MAAM,iBAAiBC,cAAY,WAAC,kBAGtE,SAAC,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAAK,SACnC5B,EAAKiC,eAEV,UAAC,IAAU,CAACN,QAAS,UAAWF,MAAM,iBAAgB,UAAC,SAC5CzB,EAAKkC,uBAoB5B,SAAC,IAAI,CAACb,MAAI,EAACC,GAAI,GAAIa,MAAO,CAACC,OAAQ,QAAQ,UACnC,SAAC,IAAG,CAACC,YAAa,GAAIC,kBAAkB,EACnCC,YAA+B,QAApB,EAAEvC,EAAKM,qBAAa,QAAE,GAAIkC,oBAAoB,EACzDC,SAAU,WAMnC,C","sources":["pages/Home/Home.js"],"sourcesContent":["import {Card, CardContent, Drawer, Typography} from '@mui/material'\nimport Page from 'material-ui-shell/lib/containers/Page'\nimport {useEffect,useState} from 'react'\nimport { useIntl } from 'react-intl'\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport {getApp} from \"../../containers/Database/app\";\nimport Map from \"../../components/Map\";\n// import Map from \"../../components/Map-arcgis\";\n// getDashboardData\n// divide map view to 2 window, may change to drawer later\nconst HomePage = () => {\n  const intl = useIntl();\n  const [data,setData] = useState({});\n    useEffect(()=>{\n       getApp().getDashboardData().then(({data})=>{\n           data.countDistrics = data.countDistrics.map(d=>d.District);\n           console.log(data)\n           setData(data)\n       })\n    },[])\n  return (\n    <Page pageTitle={intl.formatMessage({ id: 'dashboard' })} contentStyle={{ overflow: 'hidden' }}>\n        <Grid container spacing={2} sx={{m:5}}>\n            <Grid item xs={3}>\n                <Card elevation={12}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                            {intl.formatMessage({ id: 'total' })} Section Data\n                        </Typography>\n                        <Typography variant=\"h3\" component=\"div\">\n                            {data.TotalSection}\n                        </Typography>\n                        <Typography variant={'caption'} color=\"text.secondary\">\n                            {intl.formatMessage({ id: 'uploaded' })} {data.TodaySectionUpload} {intl.formatMessage({ id: 'today' })}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={3}>\n                <Card elevation={12}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                            Total Survey Data\n                        </Typography>\n                        <Typography variant=\"h3\" component=\"div\">\n                            {data.TotalSurveyData?data.TotalSurveyData:20}\n                        </Typography>\n                        <Typography variant={'caption'} color=\"text.secondary\">\n                            Uploaded {data.TodaySurveyUpload} today\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={3}>\n                <Card elevation={12}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                            Memory usage\n                        </Typography>\n                        <Typography variant=\"h3\" component=\"div\">\n                            {data.memoryusage}\n                        </Typography>\n                        <Typography variant={'caption'} color=\"text.secondary\">\n                            Total {data.TotalMemory}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            {/*<Grid item xs={3}>*/}\n            {/*    <Card elevation={12}>*/}\n            {/*        <CardContent>*/}\n            {/*            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>*/}\n            {/*                Memory usage*/}\n            {/*            </Typography>*/}\n            {/*            <Typography variant=\"h3\" component=\"div\">*/}\n            {/*                {data.Diskusage}*/}\n            {/*            </Typography>*/}\n            {/*            <Typography variant={'caption'} color=\"text.secondary\">*/}\n            {/*                Total {data.TotalDiskusage}*/}\n            {/*            </Typography>*/}\n            {/*        </CardContent>*/}\n            {/*    </Card>*/}\n            {/*</Grid>*/}\n            <Grid item xs={12} style={{height: '50vh'}}>\n                    <Map allCounties={[]} plotCountyOption={false}\n                         allDistrics={data.countDistrics??[]} plotDistrictOption={true}\n                         roadData={[]}\n                    ></Map>\n            </Grid>\n        </Grid>\n    </Page>\n  )\n}\nexport default HomePage\n"],"names":["intl","useIntl","useState","data","setData","useEffect","getApp","getDashboardData","then","countDistrics","map","d","District","console","log","pageTitle","formatMessage","id","contentStyle","overflow","container","spacing","sx","m","item","xs","elevation","fontSize","color","gutterBottom","variant","component","TotalSection","TodaySectionUpload","TotalSurveyData","TodaySurveyUpload","memoryusage","TotalMemory","style","height","allCounties","plotCountyOption","allDistrics","plotDistrictOption","roadData"],"sourceRoot":""}