{"version":3,"file":"static/js/215.836df8a8.chunk.js","mappings":"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","sources":["components/Carousel/Settings.js","components/Carousel/index.js","components/Image/Image.js","pages/LandingPage/ShowCase.js","pages/LandingPage/Footer.js","pages/LandingPage/LandingPage.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    Slider,\r\n    Typography,\r\n    Switch,\r\n} from '@mui/material';\r\n// import '../style/Settings.scss';\r\n\r\n\r\nexport const DefaultSettingsT = {\r\n    autoPlay: true,\r\n    animation: \"fade\",\r\n    indicators: true,\r\n    duration: 500,\r\n    navButtonsAlwaysVisible: false,\r\n    navButtonsAlwaysInvisible: false,\r\n    cycleNavigation: true,\r\n    fullHeightHover: true,\r\n    swipe: true\r\n}\r\n\r\n\r\n\r\nconst Settings = ({settings, setSettings}) => {\r\n\r\n    /** Default function for Switches */\r\n    const toggler = (event) => {\r\n        setSettings({\r\n            ...settings,\r\n            [event.target.value]: !settings[event.target.value]\r\n        })\r\n    }\r\n\r\n    /** Default function for Radio Groups */\r\n    const radio = (event) => {\r\n        setSettings({\r\n            ...settings,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    /** Default function for Sliders */\r\n    const slider = (event, value) => {\r\n        console.log(event);\r\n        console.log(value);\r\n        setSettings({\r\n            ...settings,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const Toggler = ({name}) => {\r\n        return (\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch onChange={toggler} checked={settings[name]} value={name}\r\n                            color=\"primary\" />\r\n                }\r\n                label={name}\r\n                labelPlacement='end'\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Options\">\r\n                <div>\r\n                    <Typography>General Options</Typography>\r\n                    <Toggler name=\"autoPlay\"/>\r\n                    <Toggler name=\"indicators\"/>\r\n                    <Toggler name=\"swipe\"/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Typography>Navigation (Buttons) Options</Typography>\r\n                    <Toggler name=\"cycleNavigation\"/>\r\n                    <Toggler name=\"navButtonsAlwaysVisible\"/>\r\n                    <Toggler name=\"navButtonsAlwaysInvisible\"/>\r\n                    <Toggler name='fullHeightHover'/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Typography>Animation Options</Typography>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <div>\r\n                                <RadioGroup\r\n                                    name=\"animation\"\r\n                                    value={settings.animation}\r\n                                    onChange={radio}\r\n                                    row\r\n                                    style={{ marginLeft: \"10px\" }}\r\n                                >\r\n                                    <FormControlLabel value=\"fade\" control={<Radio color=\"primary\" />} label=\"Fade\" />\r\n                                    <FormControlLabel value=\"slide\" control={<Radio color=\"primary\" />} label=\"Slide\" />\r\n                                </RadioGroup>\r\n                            </div>\r\n                        }\r\n                        label=\"\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <div style={{ width: '100%' }}>\r\n                                {/* <Typography>\r\n                                    Animation Duration in ms\r\n                                </Typography> */}\r\n                                <Slider\r\n                                    defaultValue={500}\r\n                                    getAriaValueText={() => `${settings.duration}ms`}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={100}\r\n                                    marks\r\n                                    min={100}\r\n                                    max={3000}\r\n                                    onChangeCommitted={(e, v) => {\r\n                                        e.target.name = 'duration';\r\n                                        slider(e, v);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        label=\"Animation Duration in ms\"\r\n                        labelPlacement='bottom'\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, { useState } from 'react';\r\nimport Settings, { DefaultSettingsT } from './Settings';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport './index.scss';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Grid,\r\n    Button, Box,\r\n} from '@mui/material';\r\n\r\n\r\nconst CustomCarousel = () => {\r\n\r\n    const [settings, setSettings] = useState(DefaultSettingsT);\r\n\r\n    return (\r\n        <div style={{color: \"#494949\", position:'relative' }}>\r\n            <Carousel\r\n                {...settings}\r\n                // next={(now: any, previous:any) => console.log(`Next User Callback: Now displaying child ${now}. Previously displayed child ${previous}`)}\r\n                // prev={(now, previous) => console.log(`Prev User Callback: Now displaying child ${now}. Previously displayed child ${previous}`)}\r\n                // onChange={(now, previous) => console.log(`OnChange User Callback: Now displaying child ${now}. Previously displayed child ${previous}`)}\r\n\r\n                // navButtonsProps={{style: {backgroundColor: 'cornflowerblue', borderRadius: 0}}}\r\n                // navButtonsWrapperProps={{style: {bottom: '0', top: 'unset', }}}\r\n                // indicatorContainerProps={{style: {margin: \"20px\"}}}\r\n                // NextIcon='next'\r\n            >\r\n                {\r\n                    items.map((item, index) => {\r\n                        return <Banner item={item} key={index} />\r\n                    })\r\n                }\r\n            </Carousel>\r\n            <Grid container style={{zIndex:1,top:0, left:0, position:'absolute',height:'100%',width:'100%'}} spacing={0}\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\">\r\n                <Grid container item style={{marginLeft:'auto',marginRight:'auto'}}  justifyContent=\"center\"\r\n                      alignItems=\"stretch\">\r\n                    <Box sx={{border: 'primary.dark',p:1, backgroundColor: 'primary.dark',\r\n                        display: {xs:'none',sm:'flex'},\r\n                        alignItems:'center'}}>\r\n                        <Typography variant={'h5'}  sx={(theme)=>({color: theme.palette.getContrastText(theme.palette.primary.dark)})}>Texas Rigid Pavement Database</Typography>\r\n                    </Box>\r\n                    <Box\r\n                        sx={(theme)=>({backgroundColor: theme.palette.getContrastText(theme.palette.primary.dark),\r\n                        p:1})}>\r\n                        <Typography variant={'h3'} fontWeight='fontWeightMedium'  sx={{color: 'primary.dark'}}>TxRPDB</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst Banner = (props) => {\r\n\r\n    // let items = [];\r\n    // const content = (\r\n    //     <Grid item xs={4} key=\"content\">\r\n    //         <CardContent className=\"Content\">\r\n    //             <Typography className=\"Title\">\r\n    //                 {props.item.Name}\r\n    //             </Typography>\r\n    //\r\n    //             <Typography className=\"Caption\">\r\n    //                 {props.item.Caption}\r\n    //             </Typography>\r\n    //\r\n    //             <Button variant=\"outlined\" className=\"ViewButton\">\r\n    //                 View Now\r\n    //             </Button>\r\n    //         </CardContent>\r\n    //     </Grid>\r\n    // )\r\n    //\r\n    //\r\n    // for (let i = 0; i < mediaLength; i++) {\r\n    //     const item = props.item.Items[i];\r\n    //\r\n    //     const media = (\r\n    //         <Grid item xs={4} key={item.Name}>\r\n    //             <CardMedia\r\n    //                 className=\"Media\"\r\n    //                 image={item.Image}\r\n    //                 title={item.Name}\r\n    //             >\r\n    //                 <Typography className=\"MediaCaption\">\r\n    //                     {item.Name}\r\n    //                 </Typography>\r\n    //             </CardMedia>\r\n    //\r\n    //         </Grid>\r\n    //     )\r\n    //\r\n    //     items.push(media);\r\n    // }\r\n    //\r\n    // if (contentPosition === \"left\") {\r\n    //     items.unshift(content);\r\n    // } else if (contentPosition === \"right\") {\r\n    //     items.push(content);\r\n    // } else if (contentPosition === \"middle\") {\r\n    //     items.splice(items.length / 2, 0, content);\r\n    // }\r\n\r\n    return (\r\n        <Card raised className=\"Banner\" style={{height: 400, position: 'relative'}}>\r\n            <Grid container spacing={0} className=\"BannerGrid\">\r\n                <Grid item xs={12} key={props.item.Name}>\r\n                    <CardMedia\r\n                        className=\"Media\"\r\n                        image={props.item.Image}\r\n                        title={props.item.Name}\r\n                    >\r\n                        <Typography className=\"MediaCaption\">\r\n                            {props.item.Name}\r\n                        </Typography>\r\n                    </CardMedia>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst items = [\r\n    {\r\n        Name: \"Space, the final frontier.\",\r\n        Caption: \"Space, the final frontier.\",\r\n        contentPosition: \"left\",\r\n        Image: require('../../asset/images/gallary_1.jpg')\r\n    },\r\n    {\r\n        Name: \"Space, the final frontier.\",\r\n        Caption: \"Space, the final frontier.\",\r\n        contentPosition: \"left\",\r\n        Image: require('../../asset/images/gallary_2.jpg')\r\n    },\r\n    {\r\n        Name: \"Space, the final frontier.\",\r\n        Caption: \"Space, the final frontier.\",\r\n        contentPosition: \"left\",\r\n        Image: require('../../asset/images/gallary_3.png')\r\n    }\r\n]\r\n\r\n\r\nexport default CustomCarousel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  alt: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  src: undefined,\r\n  width: undefined,\r\n  height: undefined,\r\n  alt: undefined\r\n}\r\n\r\nclass Image extends React.Component {\r\n\r\n  state = {\r\n    isLoaded: false,\r\n  };\r\n\r\n  image = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const placeholderImage = document.createElement('img');\r\n    this.handlePlaceholder(this.image.current, placeholderImage);\r\n  }\r\n\r\n  placeholderSrc = (w, h) => {\r\n    return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${w} ${h}\"%3E%3C/svg%3E`;\r\n  }\r\n\r\n  handlePlaceholder = (img, placeholder) => {\r\n    img.style.display = 'none';\r\n    img.before(placeholder);\r\n    placeholder.src = this.placeholderSrc(\r\n      img.getAttribute('width') || 0,\r\n      img.getAttribute('height') || 0\r\n    );\r\n    placeholder.width = img.getAttribute('width');\r\n    placeholder.height = img.getAttribute('height');\r\n    placeholder.style.opacity = '0';\r\n    img.className && placeholder.classList.add(img.className);\r\n\r\n    img.addEventListener('load', () => {\r\n      placeholder.remove();\r\n      img.style.display = '';\r\n      this.setState({\r\n        isLoaded: true\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      src,\r\n      width,\r\n      height,\r\n      alt,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <img\r\n        {...props}\r\n        ref={this.image}\r\n        className={className}\r\n        src={src}\r\n        width={width}\r\n        height={height}\r\n        alt={alt} />\r\n    );\r\n  }\r\n}\r\n\r\nImage.propTypes = propTypes;\r\nImage.defaultProps = defaultProps;\r\n\r\nexport default Image;","import React from 'react';\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport {Box, Typography} from \"@mui/material\";\r\n\r\nconst Item = (props)=>{\r\n    return <Grid item xs={3} style={{textAlign:'center'}}>\r\n        <Typography variant={'h4'} color={'primary'}>{props.stat}</Typography>\r\n        <Typography variant={'span'} color={'primary'}>{props.title}</Typography>\r\n    </Grid>\r\n}\r\nconst ShowCase = ()=>{\r\n    return <Grid container spacing={2} item xs={12}>\r\n        <Box sx={{textAlign:'center',\r\n                border:1,\r\n                borderColor: 'divider',\r\n                borderLeft: 0,\r\n                borderRight: 0,\r\n                width:'100%'\r\n            }}>\r\n            <Grid container spacing={2} item xs={12} direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\">\r\n                <Item stat={5} title={'Projects'}/>\r\n                <Item stat={63} title={'Counties'}/>\r\n                <Item stat={554} title={'Sections'}/>\r\n                <Item stat={'1000+'} title={'Survey data'}/>\r\n            </Grid>\r\n        </Box>\r\n    </Grid>\r\n}\r\n\r\nexport default ShowCase;","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          height: '100px',\n          //width: '100%',\n          backgroundImage: 'url(bottom.jpg)',\n          backgroundRepeat: 'no-repeat',\n          backgroundAttachment: 'fixed',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      ></div>\n      <AppBar\n        position=\"relative\"\n        style={{\n          backgroundColor: '#242424',\n          //position: 'absolute',\n          width: '100%',\n          padding: 18,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 50,\n          bottom: 0,\n          left: 0,\n          right: 0,\n        }}\n        id=\"footer-text\"\n      >\n        {`TxRPDB © Copyright ${new Date().getFullYear()} TechMRT, Texas Tech University.`}\n      </AppBar>\n    </React.Fragment>\n  )\n}\n\nexport default Footer\n","import React, {useState, Suspense, lazy} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Scrollbars} from 'react-custom-scrollbars-2'\nimport {useNavigate} from 'react-router-dom'\nimport {Helmet} from 'react-helmet'\nimport {\n    AppBar,\n    Box,\n    Button,\n    CardMedia,\n    CircularProgress,\n    Container, createTheme,\n    Divider, Paper,\n    Stack, styled, ThemeProvider,\n    Toolbar,\n    Typography\n} from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport Carousel from '../../components/Carousel'\nimport Image from \"../../components/Image/Image\";\nimport ShowCase from \"./ShowCase\";\nimport Footer from \"./Footer\"; // Grid version 2\nimport allThemes from '../../config/themes'\n\nconst items = [\n    {\n        name: \"Random Name #1\",\n        description: \"Probably the most random thing you have ever seen!\"\n    }\n]\nconst theme = createTheme({\n    ...allThemes[0].source\n});\nconst LandingPage = () => {\n    const [scrollbar, setScrollbar] = useState(null);\n    const [transparent, setTransparent] = useState(true)\n    const [scrolled, setScrolled] = useState(false)\n    const [components, setComponents] = useState(null)\n    const [top, setTop] = useState(null)\n    const navigate = useNavigate()\n\n    const scrollTo = (e) => {\n        e &&\n        e.scrollIntoView({\n            behavior: 'smooth',\n            alignToTop: true,\n        })\n    }\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n            <Helmet>\n                <meta charset=\"utf-8\"/>\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, initial-scale=1, minimum-scale=1, minimal-ui\"\n                />\n                <link rel=\"shortcut icon\" href=\"/favicon.ico\"/>\n                <link rel=\"canonical\" href=\"https://www.react-most-wanted.com\"/>\n                <meta\n                    name=\"keywords\"\n                    content={\n                        'react,pwa,material-ui,redux,boilerplate,lighthouse,gdg,react.js'\n                    }\n                />\n                <meta\n                    name=\"description\"\n                    content={\n                        'React PWA boilerplate that is using create-react-app and firebase '\n                    }\n                />\n\n                <title>RPDB</title>\n            </Helmet>\n            <Scrollbars\n                ref={(e) => {\n                    if (e !== null) {\n                        setScrollbar(e)\n                    }\n                }}\n                renderView={(props) => (\n                    <div\n                        {...props}\n                        style={{\n                            ...props.style,\n                        }}\n                    />\n                )}\n                onScroll={(e) => {\n                    setTransparent(scrollbar.viewScrollTop < 100)\n                    setScrolled(true)\n                }}\n                autoHide\n                style={{\n                    width: '100%', height: '100vh',\n                    flexGrow: 1,\n                    display: 'flex',\n                }}\n            >\n                <AppBar\n                    component=\"nav\"\n                    sx={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        backgroundColor: transparent ? 'transparent' : 'primary.dark',\n                        boxShadow: transparent ? 'none' : 'primary.dark',\n                        transition: 'background 1s',\n                        zIndex: 2\n                    }}\n                    position=\"static\"\n                >\n                    <Toolbar>\n                        <Typography\n                            variant=\"h6\"\n                            component=\"div\"\n                            onClick={() => {\n                                debugger\n                                scrollTo(top)\n                            }}\n                            sx={{\n                                flexGrow: 1,\n                                cursor: 'pointer',\n                                display: transparent ? 'none' : 'block',\n                            }}\n                        >\n                            TxRPDB\n                        </Typography>\n                        <Box sx={{display: transparent ? 'none' : {xs: 'none', sm: 'block'}}}>\n                            <Link to=\"/dashboard\" style={{\n                                color: 'inherit', /* blue colors for links too */\n                                textDecoration: 'inherit' /* no underline */\n                            }}>\n                                <Button color=\"inherit\">\n                                    <Typography variant=\"h6\" noWrap>Start\n                                    </Typography>\n                                </Button>\n                            </Link>\n                        </Box>\n\n                    </Toolbar>\n                </AppBar>\n                <Box sx={{flexGrow: 1}} ref={(r) => r && setTop(r)}>\n                    <Carousel items={items}/>\n                    <Container>\n                        <Grid container spacing={4}>\n                            <Box sx={{position:'relative',width: '100%',\n                                mt:3,\n                                \"&::before\":{\n                                    content: '\"\"',\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: 0,\n                                    borderTopColor: 'divider',\n                                    borderTopWidth: 1,\n                                    borderTopStyle: 'solid',\n                                    bgcolor: 'background.paper',\n                                    width: '100%',\n                                    transform: 'translateY(-50%)',\n                                }}}>\n                                <Grid container item xs={12} spacing={2}>\n                                    <Link to=\"/dashboard\" style={{\n                                        color: 'inherit', /* blue colors for links too */\n                                        textDecoration: 'inherit' /* no underline */,\n                                        marginLeft:'auto',\n                                        marginRight:'auto',\n                                    }}>\n                                        <Button variant=\"contained\" size=\"large\" sx={{ml:'auto',mr:'auto'}}>\n                                            Start\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            </Box>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <Typography variant=\"h4\">About Us.</Typography>\n                                    <p>\n                                        Texas Rigid Pavement Database (TxRPDB) aims to provide a\n                                        comprehensive enterprise\n                                        platform\n                                        for sharing rigid pavement performance data in Texas. Currently, TxRPDB provides\n                                        design,\n                                        structural and performance data for continuously reinforced concrete pavement\n                                        (CRCP)\n                                        and\n                                        jointed concrete pavement (CPCD) in Texas. Additionally, findings from TxDOT and\n                                        national\n                                        research projects and special and experimental sections built over the years by\n                                        TxDOT\n                                        can\n                                        be accessed through TxRPDB. TxRPDB is a product of TxDOT Research Project\n                                        0-6274:\n                                        “Project\n                                        Level Performance Database for Rigid Pavements in Texas – II” and is being\n                                        developed\n                                        and\n                                        managed by Texas Tech Center for Multidisciplinary Research in Transportation\n                                        (TechMRT),\n                                        Texas Tech University. TxRPDB currently comprises of the following types of\n                                        Rigid\n                                        Pavement\n                                        data\n                                    </p>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <CardMedia\n                                        component=\"img\"\n\n                                        image={require('../../asset/images/HomePageImage.jpg')}\n                                        alt=\"Paella dish\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container item xs={12}>\n                                <Grid item xs={4}>\n                                    <Typography variant=\"h5\">Performance data</Typography>\n                                    <p>Pavement performance data (Average Deflection, Load Transfer Efficiency and\n                                        Visual\n                                        Survey) for test sections being monitored under TxDOT Research project 0-6274 in\n                                        Texas.</p>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Typography variant=\"h5\">General information</Typography>\n                                    <p>General pavement information ( Construction Year, Slab Thickness, Location) and\n                                        Plan Sets for Continuously Reinforced Pavements and Concrete Pavement Continuous\n                                        Design in Texas.</p>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Typography variant=\"h5\">Special & Experimental</Typography>\n                                    <p>General pavement information, Plan Sets, research findings and research reports\n                                        for various Special and Experimental rigid pavement sections such as Bonded\n                                        Overlay,\n                                        Unbonded Overlay, Post Tension Concrete Pavement and Whitetopping pavements\n                                        constructed\n                                        by TxDOT.</p>\n                                </Grid>\n                            </Grid>\n\n                            <ShowCase/>\n                            <Grid container item xs={12}>\n                                <Typography variant=\"h4\" sx={{width:'100%'}}>Recent update</Typography>\n\n                                <Grid item xs={4} md={3}>\n                                    <Paper elevation={7} sx={{padding:1}}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            image={require(\"../../asset/images/HomePageImageSideImage.jpg\")}\n                                            alt=\"Paella dish\"\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4} md={3}>\n                                    <Paper elevation={7} sx={{padding:1}}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            image={require(\"../../asset/images/thumnai_2.jpg\")}\n                                            alt=\"Paella dish\"\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4} md={3}>\n                                    <Paper elevation={7} sx={{padding:1}}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            image={require(\"../../asset/images/thumnai_3.PNG\")}\n                                            alt=\"Paella dish\"\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={4} md={3}>\n                                    <Paper elevation={7} sx={{padding:1}}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            image={require(\"../../asset/images/thumnai_4.png\")}\n                                            alt=\"Paella dish\"\n                                        />\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Container>\n\n                    {scrolled && (\n                        <Suspense fallback={<CircularProgress />}>\n                            <Footer />\n                        </Suspense>\n                    )}\n                </Box>\n                {/*<div>*/}\n                {/*    <Link to=\"/home\">Home</Link>*/}\n                {/*</div>*/}\n            </Scrollbars>\n            </ThemeProvider>\n        </React.Fragment>\n    )\n}\nexport default LandingPage\n"],"names":["DefaultSettingsT","autoPlay","animation","indicators","duration","navButtonsAlwaysVisible","navButtonsAlwaysInvisible","cycleNavigation","fullHeightHover","swipe","Banner","props","Card","raised","className","style","height","position","Grid","container","spacing","item","xs","CardMedia","image","Image","title","Name","items","Caption","contentPosition","require","useState","settings","color","map","index","zIndex","top","left","width","direction","justifyContent","alignItems","marginLeft","marginRight","Box","sx","border","p","backgroundColor","display","sm","variant","theme","palette","getContrastText","primary","dark","fontWeight","defaultProps","src","undefined","alt","state","isLoaded","React","placeholderSrc","w","h","handlePlaceholder","img","placeholder","before","getAttribute","opacity","classList","add","addEventListener","remove","setState","placeholderImage","document","createElement","this","current","ref","Item","textAlign","stat","borderColor","borderLeft","borderRight","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","flexDirection","AppBar","padding","bottom","right","id","Date","getFullYear","name","description","createTheme","allThemes","scrollbar","setScrollbar","transparent","setTransparent","scrolled","setScrolled","setTop","useNavigate","ThemeProvider","Helmet","charset","content","rel","href","Scrollbars","e","renderView","onScroll","viewScrollTop","autoHide","flexGrow","component","boxShadow","transition","Toolbar","onClick","scrollIntoView","behavior","alignToTop","cursor","Link","to","textDecoration","Button","noWrap","r","Container","mt","borderTopColor","borderTopWidth","borderTopStyle","bgcolor","transform","size","ml","mr","md","Paper","elevation","Suspense","fallback","CircularProgress"],"sourceRoot":""}