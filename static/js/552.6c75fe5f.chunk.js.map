{"version":3,"file":"static/js/552.6c75fe5f.chunk.js","mappings":"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","sources":["pages/FilterDemo/index.js"],"sourcesContent":["import AutoSizer from 'lp-react-virtualized-auto-sizer-react-18'\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@mui/material'\nimport { FilterList } from '@mui/icons-material'\nimport FilterDrawer from 'material-ui-shell/lib/components/FilterDrawer'\nimport Page from 'material-ui-shell/lib/containers/Page'\nimport React, { useEffect, useCallback } from 'react'\nimport SearchField from 'material-ui-shell/lib/components/SearchField'\nimport source from './data.json'\nimport { FixedSizeList } from 'react-window'\nimport { Scrollbars } from 'react-custom-scrollbars-2'\nimport { useFilter } from 'material-ui-shell/lib/providers/Filter'\nimport { useIntl } from 'react-intl'\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\n\nconst filterName = 'test_filter'\n\nconst CustomScrollbars = ({ onScroll, forwardedRef, style, children }) => {\n  const { isRTL } = useAppTheme()\n  const refSetter = useCallback((scrollbarsRef) => {\n    if (scrollbarsRef) {\n      forwardedRef(scrollbarsRef.view)\n    } else {\n      forwardedRef(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <Scrollbars\n      ref={refSetter}\n      renderView={(props) =>\n        isRTL ? (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              marginLeft: props.style.marginRight,\n              marginRight: 0,\n            }}\n          />\n        ) : (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n            }}\n          />\n        )\n      }\n      // style={{ ...style, overflow: 'hidden' }}\n      style={{ ...style, overflow: 'hidden', direction: isRTL ? 'rtl' : 'ltr' }} //james - test code should fix native scrollbars in demofilter and maybe in RMW demos,\n      onScroll={onScroll}\n    >\n      {children}\n    </Scrollbars>\n  )\n}\n\nconst CustomScrollbarsVirtualList = React.forwardRef((props, ref) => (\n  <CustomScrollbars {...props} forwardedRef={ref} />\n))\n\nconst FilterDemo = () => {\n  const intl = useIntl()\n  const { openFilter, getList, getFilter, setSearch } = useFilter()\n\n  const { queries = [], search = {} } = getFilter(filterName)\n  const { value: searchValue = '' } = search\n\n  const fields = [\n    {\n      name: 'name',\n      label: 'Name',\n    },\n    {\n      name: 'email',\n      label: 'E-Mail',\n    },\n    {\n      name: 'amount',\n      label: 'Amount',\n      type: 'number',\n    },\n    {\n      name: 'isActive',\n      label: 'Active',\n      type: 'bool',\n    },\n    {\n      name: 'registered',\n      label: 'Registered',\n      type: 'date',\n    },\n    {\n      name: 'registrationTime',\n      label: 'Registration time',\n      type: 'time',\n    },\n  ]\n\n  const list = getList(filterName, source, fields)\n\n  const listRef = React.createRef()\n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollToItem(1500, 'center')\n    }\n  }, [listRef])\n\n  const Row = ({ index, style }) => {\n    const { name, amount = '', registered, email } = list[index]\n\n    return (\n      <div key={`${name}_${index}`} style={style}>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText\n            primary={`${name} ${index}`}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {email}\n                </Typography>\n                <br />\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {`${amount} ${registered}`}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <Divider />\n      </div>\n    )\n  }\n\n  return (\n    <Page\n      pageTitle={intl.formatMessage(\n        {\n          id: 'filter_demo',\n          defaultMessage: 'Filter demo with {count} rows',\n        },\n        { count: list.length }\n      )}\n      contentStyle={{ overflow: 'hidden' }}\n      appBarContent={\n        <Toolbar disableGutters>\n          <SearchField\n            initialValue={searchValue}\n            onChange={(v) => {\n              setSearch(filterName, v)\n            }}\n          />\n          <IconButton color=\"inherit\" onClick={() => openFilter(filterName)}>\n            <FilterList color={queries.length > 0 ? 'secondary' : undefined} />\n          </IconButton>\n        </Toolbar>\n      }\n    >\n      <AutoSizer style={{ height: '100%', width: '100%' }}>\n        {({ height, width }) => {\n          return (\n            <List disablePadding={true}>\n              <FixedSizeList\n                className=\"List\"\n                ref={listRef}\n                height={height}\n                itemCount={list.length}\n                itemSize={91}\n                width={width}\n                outerElementType={CustomScrollbarsVirtualList}\n              >\n                {Row}\n              </FixedSizeList>\n            </List>\n          )\n        }}\n      </AutoSizer>\n      <FilterDrawer fields={fields} name={filterName} />\n    </Page>\n  )\n}\n\nexport default FilterDemo\n"],"names":["filterName","CustomScrollbars","onScroll","forwardedRef","style","children","isRTL","useAppTheme","refSetter","useCallback","scrollbarsRef","view","Scrollbars","ref","renderView","props","marginLeft","marginRight","overflow","direction","CustomScrollbarsVirtualList","React","intl","useIntl","useFilter","openFilter","getList","getFilter","setSearch","queries","search","value","searchValue","fields","name","label","type","list","source","listRef","useEffect","current","scrollToItem","Row","index","amount","registered","email","ListItem","alignItems","ListItemText","primary","secondary","Typography","component","variant","color","Divider","Page","pageTitle","formatMessage","id","defaultMessage","count","length","contentStyle","appBarContent","Toolbar","disableGutters","initialValue","onChange","v","IconButton","onClick","FilterList","undefined","height","width","List","disablePadding","FixedSizeList","className","itemCount","itemSize","outerElementType"],"sourceRoot":""}